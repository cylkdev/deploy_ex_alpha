version: 2.1

executors:
  terraform:
    docker:
      - image: hashicorp/terraform:1.9.6
        name: terraform
  ansible:
    docker:
      - image: alpine/ansible:2.17.0
        name: ansible

jobs:
  terraform_provision_ec2:
    executor: terraform
    working_directory: ~/project/terraform
    parameters:
      environment:
        type: string
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Terraform Version
          command: |
            terraform --version
      - run:
          name: Terraform Init
          command: |
            terraform init
      - run:
          name: Terraform Plan
          command: |
            terraform plan -var-file="vars/<< parameters.environment >>.tfvars" -out << parameters.environment >>.tfplan
      - run:
          name: Terraform Apply
          command: |
            terraform apply << parameters.environment >>.tfplan

  ansible_playbook:
    executor: ansible
    working_directory: ~/project/ansible
    parameters:
      inventory:
        type: string
      playbook:
        type: string
    environment:
      # There are two versions of python installed at `/usr/bin/python3` and `/usr/local/bin/python3`.
      # Only the python version installed at `/usr/local/bin/python3` has pip installed.
      ANSIBLE_PYTHON_INTERPRETER: /usr/local/bin/python3
    steps:
      - checkout:
          path: ~/project

      # Note: This is used as a convenience to setup ssh inside the container
      # while keeping the behavior consistent. The intent here is to not have
      # multiple methods of installing and configuring ssh.
      #
      # https://circleci.com/docs/add-ssh-key/
      - add_ssh_keys:
          fingerprints:

      - run:
          name: Ansible Playbook Version
          command: |
            ansible-playbook --version

      - run:
          name: Install boto3 and botocore
          command: |
            /usr/local/bin/python3 -m pip install boto3 botocore --user ansible

      # The value of the ssh key must be encoded to base64 and stored
      # in the organization context or project environment variable.
      - run:
          name: Save Ansible SSH Key
          command: |
            echo "$AWS_INSTANCE_PRIVATE_KEY" | base64 -d > ansible-private-key.pem
            chmod 400 ansible-private-key.pem
  
      - run:
          name: Python alias
          command: |
            type python3

      - run:
          name: List Ansible inventory - << parameters.inventory >>
          command: |
            ansible-inventory -i ./inventory/<< parameters.inventory >>.yaml --list

      - run:
          name: Run Ansible Playbook - << parameters.playbook >>
          command: |
            ansible-playbook -vvv -i inventory/<< parameters.inventory >>.yaml ./playbooks/<< parameters.playbook >>.yaml

  terraform_provision_load_balancer:
    executor: terraform
    working_directory: ~/project/terraform
    parameters:
      environment:
        type: string
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Terraform Version
          command: |
            terraform --version
      - run:
          name: Terraform Init
          command: |
            terraform init
      - run:
          name: Terraform Plan
          command: |
            terraform plan -var-file="vars/<< parameters.environment >>.tfvars" -var='enable_elb=true' -out << parameters.environment >>.tfplan
      - run:
          name: Terraform Apply
          command: |
            terraform apply << parameters.environment >>.tfplan

workflows:
  deploy:
    jobs:
      # - terraform_provision_ec2:
      #     context:
      #       - aws_deploy
      #     environment: development

      - ansible_playbook:
          context:
            - aws_deploy
          inventory: aws_ec2
          playbook: health_check
          
          # requires:
          #   - terraform_provision_ec2

      # - terraform_provision_load_balancer:
      #     context:
      #       - aws_deploy
      #     requires:
      #       - ansible_playbook
      #     environment: development