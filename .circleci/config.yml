version: 2.1

executors:
  terraform:
    docker:
      - image: hashicorp/terraform:1.9.6
        name: terraform
  ansible:
    docker:
      - image: alpine/ansible:2.17.0
        name: ansible

jobs:
  # This job only provisions AWS resources. When EC2 instances
  # are created they are in an unhealthy state and will be
  # configured by the `ansible_playbook` job.
  terraform_provision:
    executor: terraform
    working_directory: ~/project/terraform
    parameters:
      environment:
        type: string
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Terraform Version
          command: |
            terraform --version
      - run:
          name: Terraform Init
          command: |
            terraform init
      - run:
          name: Terraform Plan
          command: |
            terraform plan -var-file="vars/<< parameters.environment >>.tfvars" -out << parameters.environment >>.tfplan
      - run:
          name: Terraform Apply
          command: |
            terraform apply << parameters.environment >>.tfplan

  # This job spawns a Ansible controller to run a playbook.
  ansible_playbook:
    executor: ansible
    working_directory: ~/project/ansible
    parameters:
      inventory:
        type: string
      playbook:
        type: string
    steps:
      - checkout:
          path: ~/project

      - run:
          name: Ansible Playbook Version
          command: |
            ansible-playbook --version

      - run:
          name: Install boto3 and botocore
          command: |
            python3 -m pip install boto3 botocore --user ansible

      # The value of the ssh key must be encoded to base64 and stored
      # in the organization context or project environment variable.
      - run:
          name: Save Ansible SSH Key
          command: |
            echo "$AWS_INSTANCE_PRIVATE_KEY" | base64 -d > ansible-private-key.pem
            chmod 400 ansible-private-key.pem

      - run:
          name: List Ansible Inventory
          command: |
            ansible-inventory -i ./inventory/<< parameters.inventory >>.yaml --list

      - run:
          name: Run Ansible Playbook
          command: |
            ansible-playbook -i inventory/<< parameters.inventory >>.yaml ./playbooks/<< parameters.playbook >>.yaml

  # This job applies the deployment strategy. This job can run tests
  # against a deployed resource before moving the traffic from the
  # old EC2 instances.
  terraform_promote:
    executor: terraform
    working_directory: ~/project/terraform
    parameters:
      environment:
        type: string
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Terraform Version
          command: |
            terraform --version
      - run:
          name: Terraform Init
          command: |
            terraform init
      - run:
          name: Terraform Plan
          command: |
            terraform plan -var-file="vars/<< parameters.environment >>.tfvars" -var='enable_elb=true' -out << parameters.environment >>.tfplan
      - run:
          name: Terraform Apply
          command: |
            terraform apply << parameters.environment >>.tfplan

workflows:
  deploy:
    jobs:
      # 1. Provision resources.
      - terraform_provision:
          context:
            - aws_deploy
          environment: development

      # 2. Configure resources.
      - ansible_playbook:
          inventory: aws_ec2
          playbook: health_check
          context:
            - aws_deploy
          requires:
            - terraform_provision

      # 2. Promote resources.
      - terraform_promote:
          context:
            - aws_deploy
          requires:
            - ansible_playbook
          environment: development