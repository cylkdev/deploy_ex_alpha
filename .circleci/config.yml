version: 2.1

executors:
  terraform:
    docker:
      - image: hashicorp/terraform:1.9.6
        name: terraform
  ansible:
    docker:
      - image: alpine/ansible:2.17.0
        name: ansible

jobs:
  terraform_init:
    executor: terraform
    working_directory: ~/project/terraform
    steps:
      - checkout:
          path: ~/project
      - run:
          name: List Directory contents
          command: |
            ls -R --color
      - run:
          name: Terraform Version
          command: |
            terraform --version
      - run:
          name: Terraform Init
          command: |
            terraform init

  terraform_plan_provision_ec2:
    executor: terraform
    working_directory: ~/project/terraform
    parameters:
      environment:
        type: string
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Terraform Plan
          command: |
            terraform plan -var-file="vars/<< parameters.environment >>.tfvars" -var='enable_elb=false' -out << parameters.environment >>.tfplan
  
  terraform_provision_ec2:
    executor: terraform
    working_directory: ~/project/terraform
    parameters:
      environment:
        type: string
    steps:
      - checkout:
          path: ~/project
      - run:
          name: List Directory contents
          command: |
            ls -R --color
      - run:
          name: Apply Terraform EC2 Resources
          command: terraform apply << parameters.environment >>.tfplan

  ansible_playbook:
    executor: ansible
    working_directory: ~/project/ansible
    steps:
      - checkout:
          path: ~/project
      - run:
          name: List Directory contents
          command: |
            ls -R --color
      - run:
          name: Run Ansible Playbook
          command: |
            ansible-playbook -i inventory/aws_ec2.yaml playbooks/health_check.yaml

  terraform_plan_provision_autoscaling:
    executor: terraform
    working_directory: ~/project/terraform
    parameters:
      environment:
        type: string
    steps:
      - checkout:
          path: ~/project
      - run:
          name: List Directory contents
          command: |
            ls -R --color
      - run:
          name: Terraform Plan
          command: |
            terraform plan -var-file="vars/<< parameters.environment >>.tfvars" -var='enable_elb=true' -out << parameters.environment >>.tfplan

  terraform_provision_autoscaling:
    executor: terraform
    working_directory: ~/project/terraform
    parameters:
      environment:
        type: string
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Apply Terraform EC2 Resources
          command: |
            terraform apply << parameters.environment >>.tfplan -var='enable_elb=true' -var='enable_elb=true' -auto-approve

workflows:
  deploy:
    jobs:
      - terraform_init:
          context:
            - aws_deploy

      - terraform_plan_provision_ec2:
          context:
            - aws_deploy
          requires:
            - terraform_init
          environment: development

      - approve_deploy:
          type: approval
          requires:
            - terraform_plan_provision_ec2

      - terraform_provision_ec2:
          type: approval
          requires:
            - approve_deploy

      - ansible_playbook:
          context:
            - aws_deploy
          requires:
            - terraform_provision_ec2

      - terraform_plan_provision_autoscaling:
          context:
            - aws_deploy
          requires:
            - ansible_playbook
          environment: development

      - terraform_provision_autoscaling:
          context:
            - aws_deploy
          requires:
            - terraform_plan_provision_autoscaling
          environment: development