version: 2.1

executors:
  terraform:
    docker:
      - image: hashicorp/terraform:1.9.6
        name: terraform
  ansible:
    docker:
      - image: alpine/ansible:2.17.0
        name: ansible

jobs:
  terraform_provision_ec2:
    executor: terraform
    working_directory: ~/project/terraform
    parameters:
      environment:
        type: string
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Terraform Version
          command: |
            terraform --version
      - run:
          name: Terraform Init
          command: |
            terraform init
      - run:
          name: Terraform Plan
          command: |
            terraform plan -var-file="vars/<< parameters.environment >>.tfvars" -out << parameters.environment >>.tfplan
      - run:
          name: Terraform Apply
          command: |
            terraform apply << parameters.environment >>.tfplan

  ansible_playbook:
    executor: ansible
    working_directory: ~/project/ansible
    steps:
      - checkout:
          path: ~/project

      - run:
          name: Ansible Version
          command: |
            ansible --version

      - run:
          name: Install Build dependencies
          command: |
            apk update && apk upgrade
            apk add --no-cache python3 py3-pip gcc musl-dev libffi-dev openssl-dev make curl

      - run:
          name: Install Botocore
          command: |
            pip install --no-cache-dir botocore boto3

      - run:
          name: Install AWS Cli
          command: |
            pip install --no-cache-dir awscli

      - run:
          name: Save SSH Key
          command: |
            echo $AWS_INSTANCE_PRIVATE_KEY > ec2-private-key.pem
            chmod 400 ec2-private-key.pem

      - run:
          name: List Directory Contents
          command: |
            ls .

      - run:
          name: Run Ansible Playbook
          command: |
            ansible-playbook -i inventory/aws_ec2.yaml ./playbooks/health_check.yaml

  terraform_provision_load_balancer:
    executor: terraform
    working_directory: ~/project/terraform
    parameters:
      environment:
        type: string
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Terraform Version
          command: |
            terraform --version
      - run:
          name: Terraform Init
          command: |
            terraform init
      - run:
          name: Terraform Plan
          command: |
            terraform plan -var-file="vars/<< parameters.environment >>.tfvars" -var='enable_elb=true' -out << parameters.environment >>.tfplan
      - run:
          name: Terraform Apply
          command: |
            terraform apply << parameters.environment >>.tfplan

workflows:
  deploy:
    jobs:
      - terraform_provision_ec2:
          context:
            - aws_deploy
          environment: development

      - ansible_playbook:
          context:
            - aws_deploy
          requires:
            - terraform_provision_ec2

      - terraform_provision_load_balancer:
          context:
            - aws_deploy
          requires:
            - ansible_playbook
          environment: development