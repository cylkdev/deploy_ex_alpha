2024-12-23 10:53:09,426 p=82250 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-23 10:53:10,560 p=82250 u=kurthogarth n=ansible | PLAY [Setup Health App] **********************************************************************************************************
2024-12-23 10:53:10,567 p=82250 u=kurthogarth n=ansible | TASK [Gathering Facts] ***********************************************************************************************************
2024-12-23 10:53:12,349 p=82250 u=kurthogarth n=ansible |  [ERROR]: User interrupted execution

2024-12-23 10:53:18,372 p=82275 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-23 10:53:19,173 p=82275 u=kurthogarth n=ansible | PLAY [Setup Health App] **********************************************************************************************************
2024-12-23 10:53:19,180 p=82275 u=kurthogarth n=ansible | TASK [Gathering Facts] ***********************************************************************************************************
2024-12-23 10:53:31,144 p=82275 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 10:53:31,149 p=82275 u=kurthogarth n=ansible | TASK [deploy_health_app : Check whoami] ******************************************************************************************
2024-12-23 10:53:42,039 p=82275 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 10:53:42,048 p=82275 u=kurthogarth n=ansible | TASK [deploy_health_app : Display whoami] ****************************************************************************************
2024-12-23 10:53:42,068 p=82275 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "The effective user is root"
}
2024-12-23 10:53:42,073 p=82275 u=kurthogarth n=ansible | TASK [deploy_health_app : Get stats for directory '/srv'] ************************************************************************
2024-12-23 10:53:54,216 p=82275 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 10:53:54,225 p=82275 u=kurthogarth n=ansible | TASK [deploy_health_app : Print message if directory exists] *********************************************************************
2024-12-23 10:53:54,245 p=82275 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Directory '/srv' exists."
}
2024-12-23 10:53:54,251 p=82275 u=kurthogarth n=ansible | TASK [deploy_health_app : Fail if directory not found] ***************************************************************************
2024-12-23 10:53:54,263 p=82275 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 10:53:54,267 p=82275 u=kurthogarth n=ansible | TASK [deploy_health_app : Create the app directory] ******************************************************************************
2024-12-23 10:54:05,222 p=82275 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 10:54:05,234 p=82275 u=kurthogarth n=ansible | TASK [deploy_health_app : Check if the app directory was created] ****************************************************************
2024-12-23 10:54:05,262 p=82275 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Created app directory."
}
2024-12-23 10:54:05,268 p=82275 u=kurthogarth n=ansible | TASK [deploy_health_app : Report failure if the app directory does not exist] ****************************************************
2024-12-23 10:54:05,279 p=82275 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 10:54:05,284 p=82275 u=kurthogarth n=ansible | TASK [deploy_health_app : Copy files to app directory] ***************************************************************************
2024-12-23 10:54:27,125 p=82275 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 10:54:27,137 p=82275 u=kurthogarth n=ansible | TASK [deploy_health_app : Check if the copy task was successful] *****************************************************************
2024-12-23 10:54:27,165 p=82275 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Files successfully copied: /srv/health_check/http_server.py."
}
2024-12-23 10:54:27,170 p=82275 u=kurthogarth n=ansible | TASK [deploy_health_app : Report failure if copy task failed] ********************************************************************
2024-12-23 10:54:27,183 p=82275 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 10:54:27,223 p=82275 u=kurthogarth n=ansible | PLAY RECAP ***********************************************************************************************************************
2024-12-23 10:54:27,223 p=82275 u=kurthogarth n=ansible | health-development-0       : ok=9    changed=3    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2024-12-23 10:56:22,320 p=82438 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-23 10:56:23,211 p=82438 u=kurthogarth n=ansible | PLAY [Setup Health App] **********************************************************************************************************
2024-12-23 10:56:23,219 p=82438 u=kurthogarth n=ansible | TASK [Gathering Facts] ***********************************************************************************************************
2024-12-23 10:56:35,993 p=82438 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 10:56:35,996 p=82438 u=kurthogarth n=ansible | TASK [deploy_health_app : Check whoami] ******************************************************************************************
2024-12-23 10:56:47,129 p=82438 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 10:56:47,134 p=82438 u=kurthogarth n=ansible | TASK [deploy_health_app : Display whoami] ****************************************************************************************
2024-12-23 10:56:47,148 p=82438 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "The effective user is root"
}
2024-12-23 10:56:47,151 p=82438 u=kurthogarth n=ansible | TASK [deploy_health_app : Get stats for directory '/srv'] ************************************************************************
2024-12-23 10:56:58,138 p=82438 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 10:56:58,144 p=82438 u=kurthogarth n=ansible | TASK [deploy_health_app : Print message if directory exists] *********************************************************************
2024-12-23 10:56:58,157 p=82438 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Directory '/srv' exists."
}
2024-12-23 10:56:58,161 p=82438 u=kurthogarth n=ansible | TASK [deploy_health_app : Fail if directory not found] ***************************************************************************
2024-12-23 10:56:58,170 p=82438 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 10:56:58,172 p=82438 u=kurthogarth n=ansible | TASK [deploy_health_app : Create the app directory] ******************************************************************************
2024-12-23 10:57:09,291 p=82438 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 10:57:09,297 p=82438 u=kurthogarth n=ansible | TASK [deploy_health_app : Check if the app directory was created] ****************************************************************
2024-12-23 10:57:09,317 p=82438 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Created app directory."
}
2024-12-23 10:57:09,320 p=82438 u=kurthogarth n=ansible | TASK [deploy_health_app : Report failure if the app directory does not exist] ****************************************************
2024-12-23 10:57:09,333 p=82438 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 10:57:09,338 p=82438 u=kurthogarth n=ansible | TASK [deploy_health_app : Copy server python script] *****************************************************************************
2024-12-23 10:57:26,648 p=82438 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 10:57:26,658 p=82438 u=kurthogarth n=ansible | TASK [deploy_health_app : Check if the copy task was successful] *****************************************************************
2024-12-23 10:57:26,682 p=82438 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Copied file to: /srv/health_check/http_server.py"
}
2024-12-23 10:57:26,687 p=82438 u=kurthogarth n=ansible | TASK [deploy_health_app : Report failure if copy task failed] ********************************************************************
2024-12-23 10:57:26,700 p=82438 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 10:57:26,704 p=82438 u=kurthogarth n=ansible | TASK [Start HTTP Service] ********************************************************************************************************
2024-12-23 10:57:26,718 p=82438 u=kurthogarth n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  did not find expected '-' indicator. while parsing a block collection
  in "<unicode string>", line 7, column 5
did not find expected '-' indicator
  in "<unicode string>", line 53, column 6

The error appears to be in '/Users/kurthogarth/Documents/GitHub/requis_deploy/ansible/roles/systemd-service/tasks/main.yml': line 53, column 6, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


     - name: Fail if the service is not running
     ^ here

2024-12-23 10:58:20,012 p=82562 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-23 10:58:20,881 p=82562 u=kurthogarth n=ansible | PLAY [Setup Health App] **********************************************************************************************************
2024-12-23 10:58:20,887 p=82562 u=kurthogarth n=ansible | TASK [Gathering Facts] ***********************************************************************************************************
2024-12-23 10:58:33,576 p=82562 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 10:58:33,582 p=82562 u=kurthogarth n=ansible | TASK [deploy_health_app : Check whoami] ******************************************************************************************
2024-12-23 10:58:45,098 p=82562 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 10:58:45,109 p=82562 u=kurthogarth n=ansible | TASK [deploy_health_app : Display whoami] ****************************************************************************************
2024-12-23 10:58:45,128 p=82562 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "The effective user is root"
}
2024-12-23 10:58:45,133 p=82562 u=kurthogarth n=ansible | TASK [deploy_health_app : Get stats for directory '/srv'] ************************************************************************
2024-12-23 10:58:56,109 p=82562 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 10:58:56,118 p=82562 u=kurthogarth n=ansible | TASK [deploy_health_app : Print message if directory exists] *********************************************************************
2024-12-23 10:58:56,137 p=82562 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Directory '/srv' exists."
}
2024-12-23 10:58:56,143 p=82562 u=kurthogarth n=ansible | TASK [deploy_health_app : Fail if directory not found] ***************************************************************************
2024-12-23 10:58:56,154 p=82562 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 10:58:56,158 p=82562 u=kurthogarth n=ansible | TASK [deploy_health_app : Create the app directory] ******************************************************************************
2024-12-23 10:59:07,119 p=82562 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 10:59:07,130 p=82562 u=kurthogarth n=ansible | TASK [deploy_health_app : Check if the app directory was created] ****************************************************************
2024-12-23 10:59:07,158 p=82562 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Created app directory."
}
2024-12-23 10:59:07,163 p=82562 u=kurthogarth n=ansible | TASK [deploy_health_app : Report failure if the app directory does not exist] ****************************************************
2024-12-23 10:59:07,177 p=82562 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 10:59:07,181 p=82562 u=kurthogarth n=ansible | TASK [deploy_health_app : Copy server python script] *****************************************************************************
2024-12-23 10:59:24,556 p=82562 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 10:59:24,567 p=82562 u=kurthogarth n=ansible | TASK [deploy_health_app : Check if the copy task was successful] *****************************************************************
2024-12-23 10:59:24,592 p=82562 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Copied file to: /srv/health_check/http_server.py"
}
2024-12-23 10:59:24,597 p=82562 u=kurthogarth n=ansible | TASK [deploy_health_app : Report failure if copy task failed] ********************************************************************
2024-12-23 10:59:24,611 p=82562 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 10:59:24,615 p=82562 u=kurthogarth n=ansible | TASK [Start HTTP Service] ********************************************************************************************************
2024-12-23 10:59:24,633 p=82562 u=kurthogarth n=ansible | included: systemd-service for health-development-0
2024-12-23 10:59:24,638 p=82562 u=kurthogarth n=ansible | TASK [systemd-service : Create service file] *************************************************************************************
2024-12-23 10:59:24,646 p=82562 u=kurthogarth n=ansible | fatal: [health-development-0]: FAILED! => {"msg": "The task includes an option with an undefined variable.. 'service_name' is undefined\n\nThe error appears to be in '/Users/kurthogarth/Documents/GitHub/requis_deploy/ansible/roles/systemd-service/tasks/main.yml': line 7, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  block:\n    - name: Create service file\n      ^ here\n"}
2024-12-23 10:59:24,647 p=82562 u=kurthogarth n=ansible | PLAY RECAP ***********************************************************************************************************************
2024-12-23 10:59:24,647 p=82562 u=kurthogarth n=ansible | health-development-0       : ok=10   changed=1    unreachable=0    failed=1    skipped=3    rescued=0    ignored=0   
2024-12-23 11:01:21,478 p=82720 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-23 11:01:22,684 p=82720 u=kurthogarth n=ansible | PLAY [Setup Health App] **********************************************************************************************************
2024-12-23 11:01:22,690 p=82720 u=kurthogarth n=ansible | TASK [Gathering Facts] ***********************************************************************************************************
2024-12-23 11:01:35,277 p=82720 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:01:35,281 p=82720 u=kurthogarth n=ansible | TASK [deploy_health_app : Check whoami] ******************************************************************************************
2024-12-23 11:01:46,530 p=82720 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 11:01:46,541 p=82720 u=kurthogarth n=ansible | TASK [deploy_health_app : Display whoami] ****************************************************************************************
2024-12-23 11:01:46,560 p=82720 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "The effective user is root"
}
2024-12-23 11:01:46,565 p=82720 u=kurthogarth n=ansible | TASK [deploy_health_app : Get stats for directory '/srv'] ************************************************************************
2024-12-23 11:01:57,810 p=82720 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:01:57,814 p=82720 u=kurthogarth n=ansible | TASK [deploy_health_app : Print message if directory exists] *********************************************************************
2024-12-23 11:01:57,825 p=82720 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Directory '/srv' exists."
}
2024-12-23 11:01:57,829 p=82720 u=kurthogarth n=ansible | TASK [deploy_health_app : Fail if directory not found] ***************************************************************************
2024-12-23 11:01:57,838 p=82720 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 11:01:57,840 p=82720 u=kurthogarth n=ansible | TASK [deploy_health_app : Create the app directory] ******************************************************************************
2024-12-23 11:02:09,244 p=82720 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:02:09,249 p=82720 u=kurthogarth n=ansible | TASK [deploy_health_app : Check if the app directory was created] ****************************************************************
2024-12-23 11:02:09,268 p=82720 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Created app directory."
}
2024-12-23 11:02:09,272 p=82720 u=kurthogarth n=ansible | TASK [deploy_health_app : Report failure if the app directory does not exist] ****************************************************
2024-12-23 11:02:09,282 p=82720 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 11:02:09,286 p=82720 u=kurthogarth n=ansible | TASK [deploy_health_app : Copy server python script] *****************************************************************************
2024-12-23 11:02:26,543 p=82720 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:02:26,548 p=82720 u=kurthogarth n=ansible | TASK [deploy_health_app : Check if the copy task was successful] *****************************************************************
2024-12-23 11:02:26,566 p=82720 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Copied file to: /srv/health_check/http_server.py"
}
2024-12-23 11:02:26,570 p=82720 u=kurthogarth n=ansible | TASK [deploy_health_app : Report failure if copy task failed] ********************************************************************
2024-12-23 11:02:26,582 p=82720 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 11:02:26,585 p=82720 u=kurthogarth n=ansible | TASK [Start HTTP Service] ********************************************************************************************************
2024-12-23 11:02:26,605 p=82720 u=kurthogarth n=ansible | included: systemd-service for health-development-0
2024-12-23 11:02:26,609 p=82720 u=kurthogarth n=ansible | TASK [systemd-service : Create service file] *************************************************************************************
2024-12-23 11:02:31,290 p=82720 u=kurthogarth n=ansible | An exception occurred during task execution. To see the full traceback, use -vvv. The error was: If you are using a module and expect the file to exist on the remote, see the remote_src option
2024-12-23 11:02:31,291 p=82720 u=kurthogarth n=ansible | fatal: [health-development-0]: FAILED! => {"changed": false, "msg": "Could not find or access '../templates/systemd.service.j2'\nSearched in:\n\t/Users/kurthogarth/Documents/GitHub/requis_deploy/ansible/roles/systemd-service/templates/../templates/systemd.service.j2\n\t/Users/kurthogarth/Documents/GitHub/requis_deploy/ansible/roles/systemd-service/../templates/systemd.service.j2\n\t/Users/kurthogarth/Documents/GitHub/requis_deploy/ansible/roles/deploy_health_app/templates/../templates/systemd.service.j2\n\t/Users/kurthogarth/Documents/GitHub/requis_deploy/ansible/roles/deploy_health_app/../templates/systemd.service.j2\n\t/Users/kurthogarth/Documents/GitHub/requis_deploy/ansible/roles/systemd-service/tasks/templates/../templates/systemd.service.j2\n\t/Users/kurthogarth/Documents/GitHub/requis_deploy/ansible/roles/systemd-service/tasks/../templates/systemd.service.j2\n\t/Users/kurthogarth/Documents/GitHub/requis_deploy/ansible/playbooks/templates/../templates/systemd.service.j2\n\t/Users/kurthogarth/Documents/GitHub/requis_deploy/ansible/playbooks/../templates/systemd.service.j2 on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option"}
2024-12-23 11:02:31,293 p=82720 u=kurthogarth n=ansible | PLAY RECAP ***********************************************************************************************************************
2024-12-23 11:02:31,293 p=82720 u=kurthogarth n=ansible | health-development-0       : ok=10   changed=1    unreachable=0    failed=1    skipped=3    rescued=0    ignored=0   
2024-12-23 11:03:19,288 p=82874 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-23 11:03:20,588 p=82874 u=kurthogarth n=ansible | PLAY [Setup Health App] **********************************************************************************************************
2024-12-23 11:03:20,596 p=82874 u=kurthogarth n=ansible | TASK [Gathering Facts] ***********************************************************************************************************
2024-12-23 11:03:32,685 p=82874 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:03:32,692 p=82874 u=kurthogarth n=ansible | TASK [deploy_health_app : Check whoami] ******************************************************************************************
2024-12-23 11:03:44,862 p=82874 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 11:03:44,871 p=82874 u=kurthogarth n=ansible | TASK [deploy_health_app : Display whoami] ****************************************************************************************
2024-12-23 11:03:44,887 p=82874 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "The effective user is root"
}
2024-12-23 11:03:44,892 p=82874 u=kurthogarth n=ansible | TASK [deploy_health_app : Get stats for directory '/srv'] ************************************************************************
2024-12-23 11:03:56,526 p=82874 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:03:56,531 p=82874 u=kurthogarth n=ansible | TASK [deploy_health_app : Print message if directory exists] *********************************************************************
2024-12-23 11:03:56,546 p=82874 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Directory '/srv' exists."
}
2024-12-23 11:03:56,549 p=82874 u=kurthogarth n=ansible | TASK [deploy_health_app : Fail if directory not found] ***************************************************************************
2024-12-23 11:03:56,558 p=82874 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 11:03:56,561 p=82874 u=kurthogarth n=ansible | TASK [deploy_health_app : Create the app directory] ******************************************************************************
2024-12-23 11:04:07,536 p=82874 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:04:07,540 p=82874 u=kurthogarth n=ansible | TASK [deploy_health_app : Check if the app directory was created] ****************************************************************
2024-12-23 11:04:07,557 p=82874 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Created app directory."
}
2024-12-23 11:04:07,560 p=82874 u=kurthogarth n=ansible | TASK [deploy_health_app : Report failure if the app directory does not exist] ****************************************************
2024-12-23 11:04:07,572 p=82874 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 11:04:07,576 p=82874 u=kurthogarth n=ansible | TASK [deploy_health_app : Copy server python script] *****************************************************************************
2024-12-23 11:04:24,849 p=82874 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:04:24,855 p=82874 u=kurthogarth n=ansible | TASK [deploy_health_app : Check if the copy task was successful] *****************************************************************
2024-12-23 11:04:24,874 p=82874 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Copied file to: /srv/health_check/http_server.py"
}
2024-12-23 11:04:24,878 p=82874 u=kurthogarth n=ansible | TASK [deploy_health_app : Report failure if copy task failed] ********************************************************************
2024-12-23 11:04:24,893 p=82874 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 11:04:24,896 p=82874 u=kurthogarth n=ansible | TASK [Start HTTP Service] ********************************************************************************************************
2024-12-23 11:04:24,914 p=82874 u=kurthogarth n=ansible | included: systemd-service for health-development-0
2024-12-23 11:04:24,919 p=82874 u=kurthogarth n=ansible | TASK [systemd-service : Create service file] *************************************************************************************
2024-12-23 11:04:46,626 p=82874 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 11:04:46,633 p=82874 u=kurthogarth n=ansible | TASK [systemd-service : Get service file stats] **********************************************************************************
2024-12-23 11:04:57,486 p=82874 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:04:57,495 p=82874 u=kurthogarth n=ansible | TASK [systemd-service : Check if service file exists] ****************************************************************************
2024-12-23 11:04:57,512 p=82874 u=kurthogarth n=ansible | fatal: [health-development-0]: FAILED! => {"msg": "invalid or malformed argument: 'Successfully created service health-check file.'"}
2024-12-23 11:04:57,514 p=82874 u=kurthogarth n=ansible | PLAY RECAP ***********************************************************************************************************************
2024-12-23 11:04:57,514 p=82874 u=kurthogarth n=ansible | health-development-0       : ok=12   changed=2    unreachable=0    failed=1    skipped=3    rescued=0    ignored=0   
2024-12-23 11:05:49,216 p=83056 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-23 11:05:50,131 p=83056 u=kurthogarth n=ansible | PLAY [Setup Health App] **********************************************************************************************************
2024-12-23 11:05:50,138 p=83056 u=kurthogarth n=ansible | TASK [Gathering Facts] ***********************************************************************************************************
2024-12-23 11:06:03,436 p=83056 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:06:03,443 p=83056 u=kurthogarth n=ansible | TASK [deploy_health_app : Check whoami] ******************************************************************************************
2024-12-23 11:06:14,944 p=83056 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 11:06:14,949 p=83056 u=kurthogarth n=ansible | TASK [deploy_health_app : Display whoami] ****************************************************************************************
2024-12-23 11:06:14,962 p=83056 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "The effective user is root"
}
2024-12-23 11:06:14,965 p=83056 u=kurthogarth n=ansible | TASK [deploy_health_app : Get stats for directory '/srv'] ************************************************************************
2024-12-23 11:06:26,072 p=83056 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:06:26,077 p=83056 u=kurthogarth n=ansible | TASK [deploy_health_app : Print message if directory exists] *********************************************************************
2024-12-23 11:06:26,092 p=83056 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Directory '/srv' exists."
}
2024-12-23 11:06:26,095 p=83056 u=kurthogarth n=ansible | TASK [deploy_health_app : Fail if directory not found] ***************************************************************************
2024-12-23 11:06:26,106 p=83056 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 11:06:26,109 p=83056 u=kurthogarth n=ansible | TASK [deploy_health_app : Create the app directory] ******************************************************************************
2024-12-23 11:06:37,216 p=83056 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:06:37,228 p=83056 u=kurthogarth n=ansible | TASK [deploy_health_app : Check if the app directory was created] ****************************************************************
2024-12-23 11:06:37,250 p=83056 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Created app directory."
}
2024-12-23 11:06:37,256 p=83056 u=kurthogarth n=ansible | TASK [deploy_health_app : Report failure if the app directory does not exist] ****************************************************
2024-12-23 11:06:37,267 p=83056 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 11:06:37,272 p=83056 u=kurthogarth n=ansible | TASK [deploy_health_app : Copy server python script] *****************************************************************************
2024-12-23 11:06:48,835 p=83056 u=kurthogarth n=ansible | fatal: [health-development-0]: FAILED! => {"msg": "file or module does not exist: /Users/kurthogarth/Documents/GitHub/requis_deploy/ansible/roles/deploy_health_app/files/http_server.py\nCould not find file on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option"}
2024-12-23 11:06:48,837 p=83056 u=kurthogarth n=ansible | PLAY RECAP ***********************************************************************************************************************
2024-12-23 11:06:48,837 p=83056 u=kurthogarth n=ansible | health-development-0       : ok=7    changed=1    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2024-12-23 11:07:02,265 p=83195 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-23 11:07:03,049 p=83195 u=kurthogarth n=ansible | PLAY [Setup Health App] **********************************************************************************************************
2024-12-23 11:07:03,059 p=83195 u=kurthogarth n=ansible | TASK [Gathering Facts] ***********************************************************************************************************
2024-12-23 11:07:15,536 p=83195 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:07:15,540 p=83195 u=kurthogarth n=ansible | TASK [deploy_health_check : Check whoami] ****************************************************************************************
2024-12-23 11:07:26,780 p=83195 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 11:07:26,792 p=83195 u=kurthogarth n=ansible | TASK [deploy_health_check : Display whoami] **************************************************************************************
2024-12-23 11:07:26,814 p=83195 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "The effective user is root"
}
2024-12-23 11:07:26,819 p=83195 u=kurthogarth n=ansible | TASK [deploy_health_check : Get stats for directory '/srv'] **********************************************************************
2024-12-23 11:07:38,021 p=83195 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:07:38,029 p=83195 u=kurthogarth n=ansible | TASK [deploy_health_check : Print message if directory exists] *******************************************************************
2024-12-23 11:07:38,045 p=83195 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Directory '/srv' exists."
}
2024-12-23 11:07:38,049 p=83195 u=kurthogarth n=ansible | TASK [deploy_health_check : Fail if directory not found] *************************************************************************
2024-12-23 11:07:38,062 p=83195 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 11:07:38,065 p=83195 u=kurthogarth n=ansible | TASK [deploy_health_check : Create the app directory] ****************************************************************************
2024-12-23 11:07:48,902 p=83195 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:07:48,907 p=83195 u=kurthogarth n=ansible | TASK [deploy_health_check : Check if the app directory was created] **************************************************************
2024-12-23 11:07:48,932 p=83195 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Created app directory."
}
2024-12-23 11:07:48,936 p=83195 u=kurthogarth n=ansible | TASK [deploy_health_check : Report failure if the app directory does not exist] **************************************************
2024-12-23 11:07:49,011 p=83195 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 11:07:49,023 p=83195 u=kurthogarth n=ansible | TASK [deploy_health_check : Copy server python script] ***************************************************************************
2024-12-23 11:08:06,436 p=83195 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:08:06,442 p=83195 u=kurthogarth n=ansible | TASK [deploy_health_check : Check if the copy task was successful] ***************************************************************
2024-12-23 11:08:06,463 p=83195 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Copied file to: /srv/health_check/http_server.py"
}
2024-12-23 11:08:06,467 p=83195 u=kurthogarth n=ansible | TASK [deploy_health_check : Report failure if copy task failed] ******************************************************************
2024-12-23 11:08:06,481 p=83195 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 11:08:06,487 p=83195 u=kurthogarth n=ansible | TASK [Start HTTP Service] ********************************************************************************************************
2024-12-23 11:08:06,507 p=83195 u=kurthogarth n=ansible | included: systemd-service for health-development-0
2024-12-23 11:08:06,511 p=83195 u=kurthogarth n=ansible | TASK [systemd-service : Create service file] *************************************************************************************
2024-12-23 11:08:24,448 p=83195 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:08:24,452 p=83195 u=kurthogarth n=ansible | TASK [systemd-service : Get service file stats] **********************************************************************************
2024-12-23 11:08:36,114 p=83195 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:08:36,121 p=83195 u=kurthogarth n=ansible | TASK [systemd-service : Check if service file exists] ****************************************************************************
2024-12-23 11:08:36,132 p=83195 u=kurthogarth n=ansible | fatal: [health-development-0]: FAILED! => {"msg": "invalid or malformed argument: 'Successfully created service health-check file.'"}
2024-12-23 11:08:36,133 p=83195 u=kurthogarth n=ansible | PLAY RECAP ***********************************************************************************************************************
2024-12-23 11:08:36,133 p=83195 u=kurthogarth n=ansible | health-development-0       : ok=12   changed=1    unreachable=0    failed=1    skipped=3    rescued=0    ignored=0   
2024-12-23 11:12:12,411 p=83443 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-23 11:12:13,325 p=83443 u=kurthogarth n=ansible | PLAY [Setup Health App] **********************************************************************************************************
2024-12-23 11:12:13,331 p=83443 u=kurthogarth n=ansible | TASK [Gathering Facts] ***********************************************************************************************************
2024-12-23 11:12:25,127 p=83443 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:12:25,132 p=83443 u=kurthogarth n=ansible | TASK [deploy_health_check : Check whoami] ****************************************************************************************
2024-12-23 11:12:36,871 p=83443 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 11:12:36,883 p=83443 u=kurthogarth n=ansible | TASK [deploy_health_check : Display whoami] **************************************************************************************
2024-12-23 11:12:36,896 p=83443 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "The effective user is root"
}
2024-12-23 11:12:36,899 p=83443 u=kurthogarth n=ansible | TASK [deploy_health_check : Get stats for directory '/srv'] **********************************************************************
2024-12-23 11:12:48,380 p=83443 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:12:48,387 p=83443 u=kurthogarth n=ansible | TASK [deploy_health_check : Print message if directory exists] *******************************************************************
2024-12-23 11:12:48,403 p=83443 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Directory '/srv' exists."
}
2024-12-23 11:12:48,408 p=83443 u=kurthogarth n=ansible | TASK [deploy_health_check : Fail if directory not found] *************************************************************************
2024-12-23 11:12:48,418 p=83443 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 11:12:48,423 p=83443 u=kurthogarth n=ansible | TASK [deploy_health_check : Create the app directory] ****************************************************************************
2024-12-23 11:12:59,717 p=83443 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:12:59,730 p=83443 u=kurthogarth n=ansible | TASK [deploy_health_check : Check if the app directory was created] **************************************************************
2024-12-23 11:12:59,762 p=83443 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Created app directory."
}
2024-12-23 11:12:59,768 p=83443 u=kurthogarth n=ansible | TASK [deploy_health_check : Report failure if the app directory does not exist] **************************************************
2024-12-23 11:12:59,781 p=83443 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 11:12:59,787 p=83443 u=kurthogarth n=ansible | TASK [deploy_health_check : Copy server python script] ***************************************************************************
2024-12-23 11:13:17,187 p=83443 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:13:17,191 p=83443 u=kurthogarth n=ansible | TASK [deploy_health_check : Check if the copy task was successful] ***************************************************************
2024-12-23 11:13:17,215 p=83443 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Copied file to: /srv/health_check/http_server.py"
}
2024-12-23 11:13:17,218 p=83443 u=kurthogarth n=ansible | TASK [deploy_health_check : Report failure if copy task failed] ******************************************************************
2024-12-23 11:13:17,228 p=83443 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 11:13:17,231 p=83443 u=kurthogarth n=ansible | TASK [Start HTTP Service] ********************************************************************************************************
2024-12-23 11:13:17,248 p=83443 u=kurthogarth n=ansible | included: systemd-service for health-development-0
2024-12-23 11:13:17,251 p=83443 u=kurthogarth n=ansible | TASK [systemd-service : Create service file] *************************************************************************************
2024-12-23 11:13:34,328 p=83443 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:13:34,338 p=83443 u=kurthogarth n=ansible | TASK [systemd-service : Get service file stats] **********************************************************************************
2024-12-23 11:13:45,104 p=83443 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:13:45,111 p=83443 u=kurthogarth n=ansible | TASK [systemd-service : Check if service file exists] ****************************************************************************
2024-12-23 11:13:45,120 p=83443 u=kurthogarth n=ansible | fatal: [health-development-0]: FAILED! => {"msg": "invalid or malformed argument: 'Successfully created service health-check file.'"}
2024-12-23 11:13:45,121 p=83443 u=kurthogarth n=ansible | PLAY RECAP ***********************************************************************************************************************
2024-12-23 11:13:45,121 p=83443 u=kurthogarth n=ansible | health-development-0       : ok=12   changed=1    unreachable=0    failed=1    skipped=3    rescued=0    ignored=0   
2024-12-23 11:14:34,123 p=83614 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-23 11:14:35,126 p=83614 u=kurthogarth n=ansible | PLAY [Setup Health App] **********************************************************************************************************
2024-12-23 11:14:35,133 p=83614 u=kurthogarth n=ansible | TASK [Gathering Facts] ***********************************************************************************************************
2024-12-23 11:14:47,967 p=83614 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:14:47,975 p=83614 u=kurthogarth n=ansible | TASK [deploy_health_check : Check whoami] ****************************************************************************************
2024-12-23 11:14:59,520 p=83614 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 11:14:59,525 p=83614 u=kurthogarth n=ansible | TASK [deploy_health_check : Display whoami] **************************************************************************************
2024-12-23 11:14:59,535 p=83614 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "The effective user is root"
}
2024-12-23 11:14:59,539 p=83614 u=kurthogarth n=ansible | TASK [deploy_health_check : Get stats for directory '/srv'] **********************************************************************
2024-12-23 11:15:10,543 p=83614 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:15:10,548 p=83614 u=kurthogarth n=ansible | TASK [deploy_health_check : Print message if directory exists] *******************************************************************
2024-12-23 11:15:10,589 p=83614 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Directory '/srv' exists."
}
2024-12-23 11:15:10,607 p=83614 u=kurthogarth n=ansible | TASK [deploy_health_check : Fail if directory not found] *************************************************************************
2024-12-23 11:15:10,626 p=83614 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 11:15:10,629 p=83614 u=kurthogarth n=ansible | TASK [deploy_health_check : Create the app directory] ****************************************************************************
2024-12-23 11:15:21,804 p=83614 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:15:21,815 p=83614 u=kurthogarth n=ansible | TASK [deploy_health_check : Check if the app directory was created] **************************************************************
2024-12-23 11:15:21,844 p=83614 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Created app directory."
}
2024-12-23 11:15:21,849 p=83614 u=kurthogarth n=ansible | TASK [deploy_health_check : Report failure if the app directory does not exist] **************************************************
2024-12-23 11:15:21,863 p=83614 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 11:15:21,867 p=83614 u=kurthogarth n=ansible | TASK [deploy_health_check : Copy server python script] ***************************************************************************
2024-12-23 11:15:38,251 p=83614 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:15:38,256 p=83614 u=kurthogarth n=ansible | TASK [deploy_health_check : Check if the copy task was successful] ***************************************************************
2024-12-23 11:15:38,273 p=83614 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Copied file to: /srv/health_check/http_server.py"
}
2024-12-23 11:15:38,282 p=83614 u=kurthogarth n=ansible | TASK [deploy_health_check : Report failure if copy task failed] ******************************************************************
2024-12-23 11:15:38,294 p=83614 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 11:15:38,298 p=83614 u=kurthogarth n=ansible | TASK [Start HTTP Service] ********************************************************************************************************
2024-12-23 11:15:38,315 p=83614 u=kurthogarth n=ansible | included: systemd-service for health-development-0
2024-12-23 11:15:38,319 p=83614 u=kurthogarth n=ansible | TASK [systemd-service : Create service file] *************************************************************************************
2024-12-23 11:15:56,603 p=83614 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:15:56,614 p=83614 u=kurthogarth n=ansible | TASK [systemd-service : Get service file stats] **********************************************************************************
2024-12-23 11:16:08,155 p=83614 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:16:08,160 p=83614 u=kurthogarth n=ansible | TASK [systemd-service : Check if service file exists] ****************************************************************************
2024-12-23 11:16:08,179 p=83614 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Successfully created service health-check file."
}
2024-12-23 11:16:08,187 p=83614 u=kurthogarth n=ansible | TASK [systemd-service : Fail if the service file does not exist] *****************************************************************
2024-12-23 11:16:08,198 p=83614 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 11:16:08,203 p=83614 u=kurthogarth n=ansible | TASK [systemd-service : Reload systemd configuration to recognize the new service] ***********************************************
2024-12-23 11:16:19,484 p=83614 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 11:16:19,496 p=83614 u=kurthogarth n=ansible | TASK [systemd-service : Start systemd service] ***********************************************************************************
2024-12-23 11:16:32,356 p=83614 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 11:16:32,368 p=83614 u=kurthogarth n=ansible | TASK [systemd-service : Get the status of the service] ***************************************************************************
2024-12-23 11:16:44,769 p=83614 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 11:16:44,773 p=83614 u=kurthogarth n=ansible | TASK [systemd-service : Print message if service is running] *********************************************************************
2024-12-23 11:16:44,787 p=83614 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Started service health-check."
}
2024-12-23 11:16:44,790 p=83614 u=kurthogarth n=ansible | TASK [systemd-service : Fail if the service is not running] **********************************************************************
2024-12-23 11:16:44,800 p=83614 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 11:16:44,806 p=83614 u=kurthogarth n=ansible | PLAY RECAP ***********************************************************************************************************************
2024-12-23 11:16:44,806 p=83614 u=kurthogarth n=ansible | health-development-0       : ok=17   changed=3    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2024-12-23 16:48:05,417 p=87278 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-23 16:48:06,269 p=87278 u=kurthogarth n=ansible | PLAY [Setup Health App] *****************************************************************
2024-12-23 16:48:06,277 p=87278 u=kurthogarth n=ansible | TASK [Gathering Facts] ******************************************************************
2024-12-23 16:48:15,662 p=87278 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 16:48:15,671 p=87278 u=kurthogarth n=ansible | TASK [deploy_health_check : Check whoami] ***********************************************
2024-12-23 16:48:24,073 p=87278 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 16:48:24,080 p=87278 u=kurthogarth n=ansible | TASK [deploy_health_check : Display whoami] *********************************************
2024-12-23 16:48:24,093 p=87278 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "The effective user is root"
}
2024-12-23 16:48:24,097 p=87278 u=kurthogarth n=ansible | TASK [deploy_health_check : Get stats for directory '/srv'] *****************************
2024-12-23 16:48:32,580 p=87278 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 16:48:32,585 p=87278 u=kurthogarth n=ansible | TASK [deploy_health_check : Print message if directory exists] **************************
2024-12-23 16:48:32,599 p=87278 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Directory '/srv' exists."
}
2024-12-23 16:48:32,602 p=87278 u=kurthogarth n=ansible | TASK [deploy_health_check : Fail if directory not found] ********************************
2024-12-23 16:48:32,617 p=87278 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 16:48:32,619 p=87278 u=kurthogarth n=ansible | TASK [deploy_health_check : Create the app directory] ***********************************
2024-12-23 16:48:41,153 p=87278 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 16:48:41,164 p=87278 u=kurthogarth n=ansible | TASK [deploy_health_check : Check if the app directory was created] *********************
2024-12-23 16:48:41,196 p=87278 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Created app directory."
}
2024-12-23 16:48:41,202 p=87278 u=kurthogarth n=ansible | TASK [deploy_health_check : Report failure if the app directory does not exist] *********
2024-12-23 16:48:41,218 p=87278 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 16:48:41,223 p=87278 u=kurthogarth n=ansible | TASK [deploy_health_check : Copy server python script] **********************************
2024-12-23 16:48:54,275 p=87278 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 16:48:54,286 p=87278 u=kurthogarth n=ansible | TASK [deploy_health_check : Check if the copy task was successful] **********************
2024-12-23 16:48:54,303 p=87278 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Copied file to: /srv/health_check/http_server.py"
}
2024-12-23 16:48:54,306 p=87278 u=kurthogarth n=ansible | TASK [deploy_health_check : Report failure if copy task failed] *************************
2024-12-23 16:48:54,317 p=87278 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 16:48:54,320 p=87278 u=kurthogarth n=ansible | TASK [Start HTTP Service] ***************************************************************
2024-12-23 16:48:54,335 p=87278 u=kurthogarth n=ansible | included: systemd-service for health-development-0
2024-12-23 16:48:54,338 p=87278 u=kurthogarth n=ansible | TASK [systemd-service : Create service file] ********************************************
2024-12-23 16:49:07,755 p=87278 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 16:49:07,760 p=87278 u=kurthogarth n=ansible | TASK [systemd-service : Get service file stats] *****************************************
2024-12-23 16:49:16,050 p=87278 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 16:49:16,054 p=87278 u=kurthogarth n=ansible | TASK [systemd-service : Check if service file exists] ***********************************
2024-12-23 16:49:16,068 p=87278 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Successfully created service health-check file."
}
2024-12-23 16:49:16,071 p=87278 u=kurthogarth n=ansible | TASK [systemd-service : Fail if the service file does not exist] ************************
2024-12-23 16:49:16,084 p=87278 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 16:49:16,088 p=87278 u=kurthogarth n=ansible | TASK [systemd-service : Reload systemd configuration to recognize the new service] ******
2024-12-23 16:49:24,585 p=87278 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 16:49:24,590 p=87278 u=kurthogarth n=ansible | TASK [systemd-service : Start systemd service] ******************************************
2024-12-23 16:49:33,311 p=87278 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 16:49:33,316 p=87278 u=kurthogarth n=ansible | TASK [systemd-service : Get the status of the service] **********************************
2024-12-23 16:49:42,041 p=87278 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 16:49:42,046 p=87278 u=kurthogarth n=ansible | TASK [systemd-service : Print message if service is running] ****************************
2024-12-23 16:49:42,059 p=87278 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Started service health-check."
}
2024-12-23 16:49:42,062 p=87278 u=kurthogarth n=ansible | TASK [systemd-service : Fail if the service is not running] *****************************
2024-12-23 16:49:42,069 p=87278 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 16:49:42,074 p=87278 u=kurthogarth n=ansible | PLAY RECAP ******************************************************************************
2024-12-23 16:49:42,075 p=87278 u=kurthogarth n=ansible | health-development-0       : ok=17   changed=2    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2024-12-23 16:56:24,277 p=88271 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-23 16:56:25,053 p=88271 u=kurthogarth n=ansible | PLAY [Setup Health App] **********************************************************************************************************
2024-12-23 16:56:25,060 p=88271 u=kurthogarth n=ansible | TASK [Gathering Facts] ***********************************************************************************************************
2024-12-23 16:56:34,674 p=88271 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 16:56:34,682 p=88271 u=kurthogarth n=ansible | TASK [deploy_health_check : Check whoami] ****************************************************************************************
2024-12-23 16:56:43,028 p=88271 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 16:56:43,034 p=88271 u=kurthogarth n=ansible | TASK [deploy_health_check : Display whoami] **************************************************************************************
2024-12-23 16:56:43,052 p=88271 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "The effective user is root"
}
2024-12-23 16:56:43,058 p=88271 u=kurthogarth n=ansible | TASK [deploy_health_check : Get stats for directory '/srv'] **********************************************************************
2024-12-23 16:56:51,465 p=88271 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 16:56:51,474 p=88271 u=kurthogarth n=ansible | TASK [deploy_health_check : Print message if directory exists] *******************************************************************
2024-12-23 16:56:51,496 p=88271 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Directory '/srv' exists."
}
2024-12-23 16:56:51,502 p=88271 u=kurthogarth n=ansible | TASK [deploy_health_check : Fail if directory not found] *************************************************************************
2024-12-23 16:56:51,514 p=88271 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 16:56:51,518 p=88271 u=kurthogarth n=ansible | TASK [deploy_health_check : Create the app directory] ****************************************************************************
2024-12-23 16:56:59,953 p=88271 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 16:56:59,962 p=88271 u=kurthogarth n=ansible | TASK [deploy_health_check : Check if the app directory was created] **************************************************************
2024-12-23 16:56:59,986 p=88271 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Created app directory."
}
2024-12-23 16:56:59,992 p=88271 u=kurthogarth n=ansible | TASK [deploy_health_check : Report failure if the app directory does not exist] **************************************************
2024-12-23 16:57:00,005 p=88271 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 16:57:00,009 p=88271 u=kurthogarth n=ansible | TASK [deploy_health_check : Copy server python script] ***************************************************************************
2024-12-23 16:57:16,318 p=88271 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 16:57:16,322 p=88271 u=kurthogarth n=ansible | TASK [deploy_health_check : Check if the copy task was successful] ***************************************************************
2024-12-23 16:57:16,338 p=88271 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Copied file to: /srv/health_check/http_server.py"
}
2024-12-23 16:57:16,341 p=88271 u=kurthogarth n=ansible | TASK [deploy_health_check : Report failure if copy task failed] ******************************************************************
2024-12-23 16:57:16,352 p=88271 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 16:57:16,355 p=88271 u=kurthogarth n=ansible | TASK [Start HTTP Service] ********************************************************************************************************
2024-12-23 16:57:16,373 p=88271 u=kurthogarth n=ansible | included: systemd-service for health-development-0
2024-12-23 16:57:16,377 p=88271 u=kurthogarth n=ansible | TASK [systemd-service : Create service file] *************************************************************************************
2024-12-23 16:57:32,468 p=88271 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 16:57:32,478 p=88271 u=kurthogarth n=ansible | TASK [systemd-service : Get service file stats] **********************************************************************************
2024-12-23 16:57:40,914 p=88271 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 16:57:40,925 p=88271 u=kurthogarth n=ansible | TASK [systemd-service : Check if service file exists] ****************************************************************************
2024-12-23 16:57:40,946 p=88271 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Successfully created service health-check file."
}
2024-12-23 16:57:40,951 p=88271 u=kurthogarth n=ansible | TASK [systemd-service : Fail if the service file does not exist] *****************************************************************
2024-12-23 16:57:40,962 p=88271 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 16:57:40,967 p=88271 u=kurthogarth n=ansible | TASK [systemd-service : Reload systemd configuration to recognize the new service] ***********************************************
2024-12-23 16:57:49,728 p=88271 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 16:57:49,737 p=88271 u=kurthogarth n=ansible | TASK [systemd-service : Start systemd service] ***********************************************************************************
2024-12-23 16:57:59,066 p=88271 u=kurthogarth n=ansible | changed: [health-development-0]
2024-12-23 16:57:59,075 p=88271 u=kurthogarth n=ansible | TASK [systemd-service : Get the status of the service] ***************************************************************************
2024-12-23 16:58:10,061 p=88271 u=kurthogarth n=ansible | ok: [health-development-0]
2024-12-23 16:58:10,071 p=88271 u=kurthogarth n=ansible | TASK [systemd-service : Print message if service is running] *********************************************************************
2024-12-23 16:58:10,094 p=88271 u=kurthogarth n=ansible | ok: [health-development-0] => {
    "msg": "Started service health-check."
}
2024-12-23 16:58:10,098 p=88271 u=kurthogarth n=ansible | TASK [systemd-service : Fail if the service is not running] **********************************************************************
2024-12-23 16:58:10,109 p=88271 u=kurthogarth n=ansible | skipping: [health-development-0]
2024-12-23 16:58:10,117 p=88271 u=kurthogarth n=ansible | PLAY RECAP ***********************************************************************************************************************
2024-12-23 16:58:10,117 p=88271 u=kurthogarth n=ansible | health-development-0       : ok=17   changed=6    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2024-12-26 13:31:15,368 p=98601 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-26 13:31:16,152 p=98601 u=kurthogarth n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2024-12-26 13:31:16,412 p=98601 u=kurthogarth n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: group_requis_backend

2024-12-26 13:31:16,413 p=98601 u=kurthogarth n=ansible | PLAY [Setup Health App] ******************************************************************************************************************************************
2024-12-26 13:31:16,413 p=98601 u=kurthogarth n=ansible | skipping: no hosts matched
2024-12-26 13:31:16,413 p=98601 u=kurthogarth n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2024-12-26 13:31:24,991 p=98620 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-26 13:31:25,723 p=98620 u=kurthogarth n=ansible | {
    "_meta": {
        "hostvars": {}
    },
    "all": {
        "children": [
            "ungrouped",
            "aws_ec2"
        ]
    }
}
2024-12-26 13:31:49,882 p=98648 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-26 13:31:50,766 p=98648 u=kurthogarth n=ansible | {
    "_meta": {
        "hostvars": {
            "sentry-0-development": {
                "ami_launch_index": 0,
                "ansible_host": "54.183.11.136",
                "architecture": "x86_64",
                "aws_credentials": {
                    "AWS_ACCESS_KEY_ID": "<AWS_ACCESS_KEY_ID>",
                    "AWS_SECRET_ACCESS_KEY": "<AWS_SECRET_ACCESS_KEY>"
                },
                "block_device_mappings": [
                    {
                        "device_name": "/dev/xvda",
                        "ebs": {
                            "attach_time": "2024-12-26T15:29:30+00:00",
                            "delete_on_termination": true,
                            "status": "attached",
                            "volume_id": "vol-07098c0aecabdf61f"
                        }
                    },
                    {
                        "device_name": "/dev/sdh",
                        "ebs": {
                            "attach_time": "2024-12-26T15:29:54+00:00",
                            "delete_on_termination": false,
                            "status": "attached",
                            "volume_id": "vol-08f65fa673156b449"
                        }
                    }
                ],
                "boot_mode": "uefi-preferred",
                "capacity_reservation_specification": {
                    "capacity_reservation_preference": "open"
                },
                "client_token": "terraform-20241226152929262800000004",
                "cpu_options": {
                    "core_count": 1,
                    "threads_per_core": 2
                },
                "current_instance_boot_mode": "uefi",
                "ebs_optimized": false,
                "ena_support": true,
                "enclave_options": {
                    "enabled": false
                },
                "hibernation_options": {
                    "configured": false
                },
                "hypervisor": "xen",
                "iam_instance_profile": {
                    "arn": "arn:aws:iam::750872578221:instance-profile/sentry-0-development-profile",
                    "id": "AIPA25U36JCW62JNBOH7A"
                },
                "image_id": "ami-047d7c33f6e7b4bc4",
                "instance_id": "i-0d8e3fe71b5394e26",
                "instance_type": "t3.micro",
                "key_name": "sentry-0-key-pair",
                "launch_time": "2024-12-26T15:29:30+00:00",
                "maintenance_options": {
                    "auto_recovery": "default"
                },
                "metadata_options": {
                    "http_endpoint": "enabled",
                    "http_protocol_ipv6": "disabled",
                    "http_put_response_hop_limit": 2,
                    "http_tokens": "required",
                    "instance_metadata_tags": "disabled",
                    "state": "applied"
                },
                "monitoring": {
                    "state": "disabled"
                },
                "network_interfaces": [
                    {
                        "association": {
                            "ip_owner_id": "amazon",
                            "public_dns_name": "ec2-54-183-11-136.us-west-1.compute.amazonaws.com",
                            "public_ip": "54.183.11.136"
                        },
                        "attachment": {
                            "attach_time": "2024-12-26T15:29:30+00:00",
                            "attachment_id": "eni-attach-0ae49bce3783b14f8",
                            "delete_on_termination": true,
                            "device_index": 0,
                            "network_card_index": 0,
                            "status": "attached"
                        },
                        "description": "",
                        "groups": [
                            {
                                "group_id": "sg-02c4fe8eb391a6f77",
                                "group_name": "requis_backend_allow_ssh"
                            },
                            {
                                "group_id": "sg-00c6c8d4529c965a8",
                                "group_name": "requis_backend_allow_tls"
                            }
                        ],
                        "interface_type": "interface",
                        "ipv6_addresses": [],
                        "mac_address": "06:80:d1:71:51:c3",
                        "network_interface_id": "eni-02e08a168288675f7",
                        "owner_id": "750872578221",
                        "private_dns_name": "i-0d8e3fe71b5394e26.us-west-1.compute.internal",
                        "private_ip_address": "10.16.64.36",
                        "private_ip_addresses": [
                            {
                                "association": {
                                    "ip_owner_id": "amazon",
                                    "public_dns_name": "ec2-54-183-11-136.us-west-1.compute.amazonaws.com",
                                    "public_ip": "54.183.11.136"
                                },
                                "primary": true,
                                "private_dns_name": "i-0d8e3fe71b5394e26.us-west-1.compute.internal",
                                "private_ip_address": "10.16.64.36"
                            }
                        ],
                        "source_dest_check": true,
                        "status": "in-use",
                        "subnet_id": "subnet-0d4ca473d8a304eb1",
                        "vpc_id": "vpc-004ce69b290ad5a5c"
                    }
                ],
                "owner_id": "750872578221",
                "placement": {
                    "availability_zone": "us-west-1a",
                    "group_name": "",
                    "region": "us-west-1",
                    "tenancy": "default"
                },
                "platform_details": "Linux/UNIX",
                "private_dns_name": "i-0d8e3fe71b5394e26.us-west-1.compute.internal",
                "private_dns_name_options": {
                    "enable_resource_name_dns_a_record": true,
                    "enable_resource_name_dns_aaaa_record": false,
                    "hostname_type": "resource-name"
                },
                "private_ip_address": "10.16.64.36",
                "product_codes": [],
                "public_dns_name": "ec2-54-183-11-136.us-west-1.compute.amazonaws.com",
                "public_ip_address": "54.183.11.136",
                "requester_id": "",
                "reservation_id": "r-0588ef9c2707cb02e",
                "root_device_name": "/dev/xvda",
                "root_device_type": "ebs",
                "security_groups": [
                    {
                        "group_id": "sg-02c4fe8eb391a6f77",
                        "group_name": "requis_backend_allow_ssh"
                    },
                    {
                        "group_id": "sg-00c6c8d4529c965a8",
                        "group_name": "requis_backend_allow_tls"
                    }
                ],
                "source_dest_check": true,
                "state": {
                    "code": 16,
                    "name": "running"
                },
                "state_transition_reason": "",
                "subnet_id": "subnet-0d4ca473d8a304eb1",
                "tags": {
                    "AvailabilityZone": "us-west-1a",
                    "Environment": "development",
                    "InstanceGroup": "sentry",
                    "InventoryGroup": "requis_backend",
                    "Name": "sentry-0-development",
                    "Region": "us-west-1",
                    "Type": "Self Made",
                    "Vendor": "Self"
                },
                "usage_operation": "RunInstances",
                "usage_operation_update_time": "2024-12-26T15:29:30+00:00",
                "virtualization_type": "hvm",
                "vpc_id": "vpc-004ce69b290ad5a5c"
            }
        }
    },
    "all": {
        "children": [
            "ungrouped",
            "aws_ec2",
            "group_requis_backend",
            "instance_group_sentry"
        ]
    },
    "aws_ec2": {
        "hosts": [
            "sentry-0-development"
        ]
    },
    "group_requis_backend": {
        "hosts": [
            "sentry-0-development"
        ]
    },
    "instance_group_sentry": {
        "hosts": [
            "sentry-0-development"
        ]
    }
}
2024-12-26 13:32:11,617 p=98693 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-26 13:32:13,180 p=98693 u=kurthogarth n=ansible | PLAY [Setup Health App] ******************************************************************************************************************************************
2024-12-26 13:32:13,190 p=98693 u=kurthogarth n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2024-12-26 13:32:14,734 p=98693 u=kurthogarth n=ansible | fatal: [sentry-0-development]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: Warning: Permanently added '54.183.11.136' (ED25519) to the list of known hosts.\r\nno such identity: /Users/kurthogarth/Documents/GitHub/requis_deploy/terraform_exports/aws_instance/ssh/health-key-pair.pem: No such file or directory\r\nec2-user@54.183.11.136: Permission denied (publickey,gssapi-keyex,gssapi-with-mic).", "unreachable": true}
2024-12-26 13:32:14,735 p=98693 u=kurthogarth n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2024-12-26 13:32:14,735 p=98693 u=kurthogarth n=ansible | sentry-0-development       : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2024-12-26 13:34:36,461 p=98787 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-26 13:34:38,144 p=98787 u=kurthogarth n=ansible | {
    "_meta": {
        "hostvars": {
            "sentry-0-development": {
                "ami_launch_index": 0,
                "ansible_host": "54.183.11.136",
                "architecture": "x86_64",
                "aws_credentials": {
                    "AWS_ACCESS_KEY_ID": "<AWS_ACCESS_KEY_ID>",
                    "AWS_SECRET_ACCESS_KEY": "<AWS_SECRET_ACCESS_KEY>"
                },
                "block_device_mappings": [
                    {
                        "device_name": "/dev/xvda",
                        "ebs": {
                            "attach_time": "2024-12-26T15:29:30+00:00",
                            "delete_on_termination": true,
                            "status": "attached",
                            "volume_id": "vol-07098c0aecabdf61f"
                        }
                    },
                    {
                        "device_name": "/dev/sdh",
                        "ebs": {
                            "attach_time": "2024-12-26T15:29:54+00:00",
                            "delete_on_termination": false,
                            "status": "attached",
                            "volume_id": "vol-08f65fa673156b449"
                        }
                    }
                ],
                "boot_mode": "uefi-preferred",
                "capacity_reservation_specification": {
                    "capacity_reservation_preference": "open"
                },
                "client_token": "terraform-20241226152929262800000004",
                "cpu_options": {
                    "core_count": 1,
                    "threads_per_core": 2
                },
                "current_instance_boot_mode": "uefi",
                "ebs_optimized": false,
                "ena_support": true,
                "enclave_options": {
                    "enabled": false
                },
                "hibernation_options": {
                    "configured": false
                },
                "hypervisor": "xen",
                "iam_instance_profile": {
                    "arn": "arn:aws:iam::750872578221:instance-profile/sentry-0-development-profile",
                    "id": "AIPA25U36JCW62JNBOH7A"
                },
                "image_id": "ami-047d7c33f6e7b4bc4",
                "instance_id": "i-0d8e3fe71b5394e26",
                "instance_type": "t3.micro",
                "key_name": "sentry-0-key-pair",
                "launch_time": "2024-12-26T15:29:30+00:00",
                "maintenance_options": {
                    "auto_recovery": "default"
                },
                "metadata_options": {
                    "http_endpoint": "enabled",
                    "http_protocol_ipv6": "disabled",
                    "http_put_response_hop_limit": 2,
                    "http_tokens": "required",
                    "instance_metadata_tags": "disabled",
                    "state": "applied"
                },
                "monitoring": {
                    "state": "disabled"
                },
                "network_interfaces": [
                    {
                        "association": {
                            "ip_owner_id": "amazon",
                            "public_dns_name": "ec2-54-183-11-136.us-west-1.compute.amazonaws.com",
                            "public_ip": "54.183.11.136"
                        },
                        "attachment": {
                            "attach_time": "2024-12-26T15:29:30+00:00",
                            "attachment_id": "eni-attach-0ae49bce3783b14f8",
                            "delete_on_termination": true,
                            "device_index": 0,
                            "network_card_index": 0,
                            "status": "attached"
                        },
                        "description": "",
                        "groups": [
                            {
                                "group_id": "sg-02c4fe8eb391a6f77",
                                "group_name": "requis_backend_allow_ssh"
                            },
                            {
                                "group_id": "sg-00c6c8d4529c965a8",
                                "group_name": "requis_backend_allow_tls"
                            }
                        ],
                        "interface_type": "interface",
                        "ipv6_addresses": [],
                        "mac_address": "06:80:d1:71:51:c3",
                        "network_interface_id": "eni-02e08a168288675f7",
                        "owner_id": "750872578221",
                        "private_dns_name": "i-0d8e3fe71b5394e26.us-west-1.compute.internal",
                        "private_ip_address": "10.16.64.36",
                        "private_ip_addresses": [
                            {
                                "association": {
                                    "ip_owner_id": "amazon",
                                    "public_dns_name": "ec2-54-183-11-136.us-west-1.compute.amazonaws.com",
                                    "public_ip": "54.183.11.136"
                                },
                                "primary": true,
                                "private_dns_name": "i-0d8e3fe71b5394e26.us-west-1.compute.internal",
                                "private_ip_address": "10.16.64.36"
                            }
                        ],
                        "source_dest_check": true,
                        "status": "in-use",
                        "subnet_id": "subnet-0d4ca473d8a304eb1",
                        "vpc_id": "vpc-004ce69b290ad5a5c"
                    }
                ],
                "owner_id": "750872578221",
                "placement": {
                    "availability_zone": "us-west-1a",
                    "group_name": "",
                    "region": "us-west-1",
                    "tenancy": "default"
                },
                "platform_details": "Linux/UNIX",
                "private_dns_name": "i-0d8e3fe71b5394e26.us-west-1.compute.internal",
                "private_dns_name_options": {
                    "enable_resource_name_dns_a_record": true,
                    "enable_resource_name_dns_aaaa_record": false,
                    "hostname_type": "resource-name"
                },
                "private_ip_address": "10.16.64.36",
                "product_codes": [],
                "public_dns_name": "ec2-54-183-11-136.us-west-1.compute.amazonaws.com",
                "public_ip_address": "54.183.11.136",
                "requester_id": "",
                "reservation_id": "r-0588ef9c2707cb02e",
                "root_device_name": "/dev/xvda",
                "root_device_type": "ebs",
                "security_groups": [
                    {
                        "group_id": "sg-02c4fe8eb391a6f77",
                        "group_name": "requis_backend_allow_ssh"
                    },
                    {
                        "group_id": "sg-00c6c8d4529c965a8",
                        "group_name": "requis_backend_allow_tls"
                    }
                ],
                "source_dest_check": true,
                "state": {
                    "code": 16,
                    "name": "running"
                },
                "state_transition_reason": "",
                "subnet_id": "subnet-0d4ca473d8a304eb1",
                "tags": {
                    "AvailabilityZone": "us-west-1a",
                    "Environment": "development",
                    "InstanceGroup": "sentry",
                    "InventoryGroup": "requis_backend",
                    "Name": "sentry-0-development",
                    "Region": "us-west-1",
                    "Type": "Self Made",
                    "Vendor": "Self"
                },
                "usage_operation": "RunInstances",
                "usage_operation_update_time": "2024-12-26T15:29:30+00:00",
                "virtualization_type": "hvm",
                "vpc_id": "vpc-004ce69b290ad5a5c"
            }
        }
    },
    "all": {
        "children": [
            "ungrouped",
            "aws_ec2",
            "group_requis_backend",
            "instance_group_sentry"
        ]
    },
    "aws_ec2": {
        "hosts": [
            "sentry-0-development"
        ]
    },
    "group_requis_backend": {
        "hosts": [
            "sentry-0-development"
        ]
    },
    "instance_group_sentry": {
        "hosts": [
            "sentry-0-development"
        ]
    }
}
2024-12-26 13:34:42,635 p=98798 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-26 13:34:43,492 p=98798 u=kurthogarth n=ansible | PLAY [Setup Health App] ******************************************************************************************************************************************
2024-12-26 13:34:43,500 p=98798 u=kurthogarth n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2024-12-26 13:34:43,615 p=98798 u=kurthogarth n=ansible | fatal: [sentry-0-development]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: vdollar_percent_expand: env var ${ ANSIBLE_PRIVATE_KEY_FILE } has no value\r\ninvalid environment variable expansion", "unreachable": true}
2024-12-26 13:34:43,615 p=98798 u=kurthogarth n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2024-12-26 13:34:43,615 p=98798 u=kurthogarth n=ansible | sentry-0-development       : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2024-12-26 13:41:06,351 p=99372 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-26 13:41:07,876 p=99372 u=kurthogarth n=ansible | {
    "_meta": {
        "hostvars": {
            "sentry-0-development": {
                "ami_launch_index": 0,
                "ansible_host": "54.183.11.136",
                "architecture": "x86_64",
                "aws_credentials": {
                    "AWS_ACCESS_KEY_ID": "<AWS_ACCESS_KEY_ID>",
                    "AWS_SECRET_ACCESS_KEY": "<AWS_SECRET_ACCESS_KEY>"
                },
                "block_device_mappings": [
                    {
                        "device_name": "/dev/xvda",
                        "ebs": {
                            "attach_time": "2024-12-26T15:29:30+00:00",
                            "delete_on_termination": true,
                            "status": "attached",
                            "volume_id": "vol-07098c0aecabdf61f"
                        }
                    },
                    {
                        "device_name": "/dev/sdh",
                        "ebs": {
                            "attach_time": "2024-12-26T15:29:54+00:00",
                            "delete_on_termination": false,
                            "status": "attached",
                            "volume_id": "vol-08f65fa673156b449"
                        }
                    }
                ],
                "boot_mode": "uefi-preferred",
                "capacity_reservation_specification": {
                    "capacity_reservation_preference": "open"
                },
                "client_token": "terraform-20241226152929262800000004",
                "cpu_options": {
                    "core_count": 1,
                    "threads_per_core": 2
                },
                "current_instance_boot_mode": "uefi",
                "ebs_optimized": false,
                "ena_support": true,
                "enclave_options": {
                    "enabled": false
                },
                "hibernation_options": {
                    "configured": false
                },
                "hypervisor": "xen",
                "iam_instance_profile": {
                    "arn": "arn:aws:iam::750872578221:instance-profile/sentry-0-development-profile",
                    "id": "AIPA25U36JCW62JNBOH7A"
                },
                "image_id": "ami-047d7c33f6e7b4bc4",
                "instance_id": "i-0d8e3fe71b5394e26",
                "instance_type": "t3.micro",
                "key_name": "sentry-0-key-pair",
                "launch_time": "2024-12-26T15:29:30+00:00",
                "maintenance_options": {
                    "auto_recovery": "default"
                },
                "metadata_options": {
                    "http_endpoint": "enabled",
                    "http_protocol_ipv6": "disabled",
                    "http_put_response_hop_limit": 2,
                    "http_tokens": "required",
                    "instance_metadata_tags": "disabled",
                    "state": "applied"
                },
                "monitoring": {
                    "state": "disabled"
                },
                "network_interfaces": [
                    {
                        "association": {
                            "ip_owner_id": "amazon",
                            "public_dns_name": "ec2-54-183-11-136.us-west-1.compute.amazonaws.com",
                            "public_ip": "54.183.11.136"
                        },
                        "attachment": {
                            "attach_time": "2024-12-26T15:29:30+00:00",
                            "attachment_id": "eni-attach-0ae49bce3783b14f8",
                            "delete_on_termination": true,
                            "device_index": 0,
                            "network_card_index": 0,
                            "status": "attached"
                        },
                        "description": "",
                        "groups": [
                            {
                                "group_id": "sg-02c4fe8eb391a6f77",
                                "group_name": "requis_backend_allow_ssh"
                            },
                            {
                                "group_id": "sg-00c6c8d4529c965a8",
                                "group_name": "requis_backend_allow_tls"
                            }
                        ],
                        "interface_type": "interface",
                        "ipv6_addresses": [],
                        "mac_address": "06:80:d1:71:51:c3",
                        "network_interface_id": "eni-02e08a168288675f7",
                        "owner_id": "750872578221",
                        "private_dns_name": "i-0d8e3fe71b5394e26.us-west-1.compute.internal",
                        "private_ip_address": "10.16.64.36",
                        "private_ip_addresses": [
                            {
                                "association": {
                                    "ip_owner_id": "amazon",
                                    "public_dns_name": "ec2-54-183-11-136.us-west-1.compute.amazonaws.com",
                                    "public_ip": "54.183.11.136"
                                },
                                "primary": true,
                                "private_dns_name": "i-0d8e3fe71b5394e26.us-west-1.compute.internal",
                                "private_ip_address": "10.16.64.36"
                            }
                        ],
                        "source_dest_check": true,
                        "status": "in-use",
                        "subnet_id": "subnet-0d4ca473d8a304eb1",
                        "vpc_id": "vpc-004ce69b290ad5a5c"
                    }
                ],
                "owner_id": "750872578221",
                "placement": {
                    "availability_zone": "us-west-1a",
                    "group_name": "",
                    "region": "us-west-1",
                    "tenancy": "default"
                },
                "platform_details": "Linux/UNIX",
                "private_dns_name": "i-0d8e3fe71b5394e26.us-west-1.compute.internal",
                "private_dns_name_options": {
                    "enable_resource_name_dns_a_record": true,
                    "enable_resource_name_dns_aaaa_record": false,
                    "hostname_type": "resource-name"
                },
                "private_ip_address": "10.16.64.36",
                "product_codes": [],
                "public_dns_name": "ec2-54-183-11-136.us-west-1.compute.amazonaws.com",
                "public_ip_address": "54.183.11.136",
                "requester_id": "",
                "reservation_id": "r-0588ef9c2707cb02e",
                "root_device_name": "/dev/xvda",
                "root_device_type": "ebs",
                "security_groups": [
                    {
                        "group_id": "sg-02c4fe8eb391a6f77",
                        "group_name": "requis_backend_allow_ssh"
                    },
                    {
                        "group_id": "sg-00c6c8d4529c965a8",
                        "group_name": "requis_backend_allow_tls"
                    }
                ],
                "source_dest_check": true,
                "state": {
                    "code": 16,
                    "name": "running"
                },
                "state_transition_reason": "",
                "subnet_id": "subnet-0d4ca473d8a304eb1",
                "tags": {
                    "AvailabilityZone": "us-west-1a",
                    "Environment": "development",
                    "InstanceGroup": "sentry",
                    "InventoryGroup": "requis_backend",
                    "Name": "sentry-0-development",
                    "Region": "us-west-1",
                    "Type": "Self Made",
                    "Vendor": "Self"
                },
                "usage_operation": "RunInstances",
                "usage_operation_update_time": "2024-12-26T15:29:30+00:00",
                "virtualization_type": "hvm",
                "vpc_id": "vpc-004ce69b290ad5a5c"
            }
        }
    },
    "all": {
        "children": [
            "ungrouped",
            "aws_ec2",
            "group_requis_backend",
            "instance_group_sentry"
        ]
    },
    "aws_ec2": {
        "hosts": [
            "sentry-0-development"
        ]
    },
    "group_requis_backend": {
        "hosts": [
            "sentry-0-development"
        ]
    },
    "instance_group_sentry": {
        "hosts": [
            "sentry-0-development"
        ]
    }
}
2024-12-26 13:41:12,280 p=99383 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-26 13:41:13,049 p=99383 u=kurthogarth n=ansible | PLAY [Setup Health App] ******************************************************************************************************************************************
2024-12-26 13:41:13,055 p=99383 u=kurthogarth n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2024-12-26 13:41:13,170 p=99383 u=kurthogarth n=ansible | fatal: [sentry-0-development]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: vdollar_percent_expand: env var ${ ANSIBLE_PRIVATE_KEY_FILE:-../terraform_exports/aws-instance-key-pair.pem } has no value\r\ninvalid environment variable expansion", "unreachable": true}
2024-12-26 13:41:13,170 p=99383 u=kurthogarth n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2024-12-26 13:41:13,170 p=99383 u=kurthogarth n=ansible | sentry-0-development       : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2024-12-26 13:43:04,632 p=99474 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-26 13:43:05,470 p=99474 u=kurthogarth n=ansible | PLAY [Setup Health App] ******************************************************************************************************************************************
2024-12-26 13:43:05,480 p=99474 u=kurthogarth n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2024-12-26 13:43:05,744 p=99474 u=kurthogarth n=ansible | fatal: [sentry-0-development]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: vdollar_percent_expand: env var ${ ANSIBLE_PRIVATE_KEY_FILE:-../deploy_secrets/aws-instance-key-pair.pem } has no value\r\ninvalid environment variable expansion", "unreachable": true}
2024-12-26 13:43:05,745 p=99474 u=kurthogarth n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2024-12-26 13:43:05,745 p=99474 u=kurthogarth n=ansible | sentry-0-development       : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2024-12-26 13:44:29,334 p=99531 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-26 13:44:30,406 p=99531 u=kurthogarth n=ansible | PLAY [Setup Health App] ******************************************************************************************************************************************
2024-12-26 13:44:30,412 p=99531 u=kurthogarth n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2024-12-26 13:44:30,660 p=99531 u=kurthogarth n=ansible | fatal: [sentry-0-development]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: vdollar_percent_expand: env var ${ ANSIBLE_PRIVATE_KEY_FILE:-../deploy_secrets/aws-instance-key-pair.pem } has no value\r\ninvalid environment variable expansion", "unreachable": true}
2024-12-26 13:44:30,660 p=99531 u=kurthogarth n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2024-12-26 13:44:30,660 p=99531 u=kurthogarth n=ansible | sentry-0-development       : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2024-12-26 13:44:39,095 p=99554 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-26 13:44:40,344 p=99554 u=kurthogarth n=ansible | PLAY [Setup Health App] ******************************************************************************************************************************************
2024-12-26 13:44:40,350 p=99554 u=kurthogarth n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2024-12-26 13:44:40,711 p=99554 u=kurthogarth n=ansible | fatal: [sentry-0-development]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: vdollar_percent_expand: env var ${ ANSIBLE_PRIVATE_KEY_FILE } has no value\r\ninvalid environment variable expansion", "unreachable": true}
2024-12-26 13:44:40,712 p=99554 u=kurthogarth n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2024-12-26 13:44:40,712 p=99554 u=kurthogarth n=ansible | sentry-0-development       : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2024-12-26 13:46:52,661 p=99663 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-26 13:46:53,631 p=99663 u=kurthogarth n=ansible | PLAY [Setup Health App] ******************************************************************************************************************************************
2024-12-26 13:46:53,642 p=99663 u=kurthogarth n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2024-12-26 13:47:08,008 p=99663 u=kurthogarth n=ansible | ok: [sentry-0-development]
2024-12-26 13:47:08,013 p=99663 u=kurthogarth n=ansible | TASK [deploy_health_check : Check whoami] ************************************************************************************************************************
2024-12-26 13:47:19,933 p=99663 u=kurthogarth n=ansible | changed: [sentry-0-development]
2024-12-26 13:47:19,942 p=99663 u=kurthogarth n=ansible | TASK [deploy_health_check : Display whoami] **********************************************************************************************************************
2024-12-26 13:47:19,957 p=99663 u=kurthogarth n=ansible | ok: [sentry-0-development] => {
    "msg": "The effective user is root"
}
2024-12-26 13:47:19,962 p=99663 u=kurthogarth n=ansible | TASK [deploy_health_check : Get stats for directory '/srv'] ******************************************************************************************************
2024-12-26 13:47:33,312 p=99663 u=kurthogarth n=ansible | ok: [sentry-0-development]
2024-12-26 13:47:33,318 p=99663 u=kurthogarth n=ansible | TASK [deploy_health_check : Print message if directory exists] ***************************************************************************************************
2024-12-26 13:47:33,335 p=99663 u=kurthogarth n=ansible | ok: [sentry-0-development] => {
    "msg": "Directory '/srv' exists."
}
2024-12-26 13:47:33,343 p=99663 u=kurthogarth n=ansible | TASK [deploy_health_check : Fail if directory not found] *********************************************************************************************************
2024-12-26 13:47:33,352 p=99663 u=kurthogarth n=ansible | skipping: [sentry-0-development]
2024-12-26 13:47:33,357 p=99663 u=kurthogarth n=ansible | TASK [deploy_health_check : Create the app directory] ************************************************************************************************************
2024-12-26 13:47:47,837 p=99663 u=kurthogarth n=ansible | changed: [sentry-0-development]
2024-12-26 13:47:47,846 p=99663 u=kurthogarth n=ansible | TASK [deploy_health_check : Check if the app directory was created] **********************************************************************************************
2024-12-26 13:47:47,880 p=99663 u=kurthogarth n=ansible | ok: [sentry-0-development] => {
    "msg": "Created app directory."
}
2024-12-26 13:47:47,885 p=99663 u=kurthogarth n=ansible | TASK [deploy_health_check : Report failure if the app directory does not exist] **********************************************************************************
2024-12-26 13:47:47,898 p=99663 u=kurthogarth n=ansible | skipping: [sentry-0-development]
2024-12-26 13:47:47,902 p=99663 u=kurthogarth n=ansible | TASK [deploy_health_check : Copy server python script] ***********************************************************************************************************
2024-12-26 13:48:13,406 p=99663 u=kurthogarth n=ansible | changed: [sentry-0-development]
2024-12-26 13:48:13,410 p=99663 u=kurthogarth n=ansible | TASK [deploy_health_check : Check if the copy task was successful] ***********************************************************************************************
2024-12-26 13:48:13,431 p=99663 u=kurthogarth n=ansible | ok: [sentry-0-development] => {
    "msg": "Copied file to: /srv/health_check/http_server.py"
}
2024-12-26 13:48:13,434 p=99663 u=kurthogarth n=ansible | TASK [deploy_health_check : Report failure if copy task failed] **************************************************************************************************
2024-12-26 13:48:13,447 p=99663 u=kurthogarth n=ansible | skipping: [sentry-0-development]
2024-12-26 13:48:13,451 p=99663 u=kurthogarth n=ansible | TASK [Start HTTP Service] ****************************************************************************************************************************************
2024-12-26 13:48:13,471 p=99663 u=kurthogarth n=ansible | included: systemd-service for sentry-0-development
2024-12-26 13:48:13,476 p=99663 u=kurthogarth n=ansible | TASK [systemd-service : Create service file] *********************************************************************************************************************
2024-12-26 13:48:38,333 p=99663 u=kurthogarth n=ansible | changed: [sentry-0-development]
2024-12-26 13:48:38,338 p=99663 u=kurthogarth n=ansible | TASK [systemd-service : Get service file stats] ******************************************************************************************************************
2024-12-26 13:48:49,752 p=99663 u=kurthogarth n=ansible | ok: [sentry-0-development]
2024-12-26 13:48:49,756 p=99663 u=kurthogarth n=ansible | TASK [systemd-service : Check if service file exists] ************************************************************************************************************
2024-12-26 13:48:49,771 p=99663 u=kurthogarth n=ansible | ok: [sentry-0-development] => {
    "msg": "Successfully created service health-check file."
}
2024-12-26 13:48:49,774 p=99663 u=kurthogarth n=ansible | TASK [systemd-service : Fail if the service file does not exist] *************************************************************************************************
2024-12-26 13:48:49,785 p=99663 u=kurthogarth n=ansible | skipping: [sentry-0-development]
2024-12-26 13:48:49,790 p=99663 u=kurthogarth n=ansible | TASK [systemd-service : Reload systemd configuration to recognize the new service] *******************************************************************************
2024-12-26 13:49:02,966 p=99663 u=kurthogarth n=ansible | changed: [sentry-0-development]
2024-12-26 13:49:02,970 p=99663 u=kurthogarth n=ansible | TASK [systemd-service : Start systemd service] *******************************************************************************************************************
2024-12-26 13:49:17,058 p=99663 u=kurthogarth n=ansible | changed: [sentry-0-development]
2024-12-26 13:49:17,064 p=99663 u=kurthogarth n=ansible | TASK [systemd-service : Get the status of the service] ***********************************************************************************************************
2024-12-26 13:49:29,979 p=99663 u=kurthogarth n=ansible | ok: [sentry-0-development]
2024-12-26 13:49:29,986 p=99663 u=kurthogarth n=ansible | TASK [systemd-service : Print message if service is running] *****************************************************************************************************
2024-12-26 13:49:30,002 p=99663 u=kurthogarth n=ansible | ok: [sentry-0-development] => {
    "msg": "Started service health-check."
}
2024-12-26 13:49:30,006 p=99663 u=kurthogarth n=ansible | TASK [systemd-service : Fail if the service is not running] ******************************************************************************************************
2024-12-26 13:49:30,017 p=99663 u=kurthogarth n=ansible | skipping: [sentry-0-development]
2024-12-26 13:49:30,027 p=99663 u=kurthogarth n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2024-12-26 13:49:30,027 p=99663 u=kurthogarth n=ansible | sentry-0-development       : ok=17   changed=6    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2024-12-26 13:59:47,922 p=386 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-26 13:59:49,732 p=386 u=kurthogarth n=ansible | {
    "_meta": {
        "hostvars": {
            "sentry-0-development": {
                "ami_launch_index": 0,
                "ansible_host": "54.183.11.136",
                "architecture": "x86_64",
                "aws_credentials": {
                    "AWS_ACCESS_KEY_ID": "<AWS_ACCESS_KEY_ID>",
                    "AWS_SECRET_ACCESS_KEY": "<AWS_SECRET_ACCESS_KEY>"
                },
                "block_device_mappings": [
                    {
                        "device_name": "/dev/xvda",
                        "ebs": {
                            "attach_time": "2024-12-26T15:29:30+00:00",
                            "delete_on_termination": true,
                            "status": "attached",
                            "volume_id": "vol-07098c0aecabdf61f"
                        }
                    },
                    {
                        "device_name": "/dev/sdh",
                        "ebs": {
                            "attach_time": "2024-12-26T15:29:54+00:00",
                            "delete_on_termination": false,
                            "status": "attached",
                            "volume_id": "vol-08f65fa673156b449"
                        }
                    }
                ],
                "boot_mode": "uefi-preferred",
                "capacity_reservation_specification": {
                    "capacity_reservation_preference": "open"
                },
                "client_token": "terraform-20241226152929262800000004",
                "cpu_options": {
                    "core_count": 1,
                    "threads_per_core": 2
                },
                "current_instance_boot_mode": "uefi",
                "ebs_optimized": false,
                "ena_support": true,
                "enclave_options": {
                    "enabled": false
                },
                "hibernation_options": {
                    "configured": false
                },
                "hypervisor": "xen",
                "iam_instance_profile": {
                    "arn": "arn:aws:iam::750872578221:instance-profile/sentry-0-development-profile",
                    "id": "AIPA25U36JCW62JNBOH7A"
                },
                "image_id": "ami-047d7c33f6e7b4bc4",
                "instance_id": "i-0d8e3fe71b5394e26",
                "instance_type": "t3.micro",
                "key_name": "sentry-0-key-pair",
                "launch_time": "2024-12-26T15:29:30+00:00",
                "maintenance_options": {
                    "auto_recovery": "default"
                },
                "metadata_options": {
                    "http_endpoint": "enabled",
                    "http_protocol_ipv6": "disabled",
                    "http_put_response_hop_limit": 2,
                    "http_tokens": "required",
                    "instance_metadata_tags": "disabled",
                    "state": "applied"
                },
                "monitoring": {
                    "state": "disabled"
                },
                "network_interfaces": [
                    {
                        "association": {
                            "ip_owner_id": "amazon",
                            "public_dns_name": "ec2-54-183-11-136.us-west-1.compute.amazonaws.com",
                            "public_ip": "54.183.11.136"
                        },
                        "attachment": {
                            "attach_time": "2024-12-26T15:29:30+00:00",
                            "attachment_id": "eni-attach-0ae49bce3783b14f8",
                            "delete_on_termination": true,
                            "device_index": 0,
                            "network_card_index": 0,
                            "status": "attached"
                        },
                        "description": "",
                        "groups": [
                            {
                                "group_id": "sg-02c4fe8eb391a6f77",
                                "group_name": "requis_backend_allow_ssh"
                            },
                            {
                                "group_id": "sg-00c6c8d4529c965a8",
                                "group_name": "requis_backend_allow_tls"
                            }
                        ],
                        "interface_type": "interface",
                        "ipv6_addresses": [],
                        "mac_address": "06:80:d1:71:51:c3",
                        "network_interface_id": "eni-02e08a168288675f7",
                        "owner_id": "750872578221",
                        "private_dns_name": "i-0d8e3fe71b5394e26.us-west-1.compute.internal",
                        "private_ip_address": "10.16.64.36",
                        "private_ip_addresses": [
                            {
                                "association": {
                                    "ip_owner_id": "amazon",
                                    "public_dns_name": "ec2-54-183-11-136.us-west-1.compute.amazonaws.com",
                                    "public_ip": "54.183.11.136"
                                },
                                "primary": true,
                                "private_dns_name": "i-0d8e3fe71b5394e26.us-west-1.compute.internal",
                                "private_ip_address": "10.16.64.36"
                            }
                        ],
                        "source_dest_check": true,
                        "status": "in-use",
                        "subnet_id": "subnet-0d4ca473d8a304eb1",
                        "vpc_id": "vpc-004ce69b290ad5a5c"
                    }
                ],
                "owner_id": "750872578221",
                "placement": {
                    "availability_zone": "us-west-1a",
                    "group_name": "",
                    "region": "us-west-1",
                    "tenancy": "default"
                },
                "platform_details": "Linux/UNIX",
                "private_dns_name": "i-0d8e3fe71b5394e26.us-west-1.compute.internal",
                "private_dns_name_options": {
                    "enable_resource_name_dns_a_record": true,
                    "enable_resource_name_dns_aaaa_record": false,
                    "hostname_type": "resource-name"
                },
                "private_ip_address": "10.16.64.36",
                "product_codes": [],
                "public_dns_name": "ec2-54-183-11-136.us-west-1.compute.amazonaws.com",
                "public_ip_address": "54.183.11.136",
                "requester_id": "",
                "reservation_id": "r-0588ef9c2707cb02e",
                "root_device_name": "/dev/xvda",
                "root_device_type": "ebs",
                "security_groups": [
                    {
                        "group_id": "sg-02c4fe8eb391a6f77",
                        "group_name": "requis_backend_allow_ssh"
                    },
                    {
                        "group_id": "sg-00c6c8d4529c965a8",
                        "group_name": "requis_backend_allow_tls"
                    }
                ],
                "source_dest_check": true,
                "state": {
                    "code": 16,
                    "name": "running"
                },
                "state_transition_reason": "",
                "subnet_id": "subnet-0d4ca473d8a304eb1",
                "tags": {
                    "AvailabilityZone": "us-west-1a",
                    "Environment": "development",
                    "InstanceGroup": "sentry",
                    "InventoryGroup": "requis_backend",
                    "Name": "sentry-0-development",
                    "Region": "us-west-1",
                    "Type": "Self Made",
                    "Vendor": "Self"
                },
                "usage_operation": "RunInstances",
                "usage_operation_update_time": "2024-12-26T15:29:30+00:00",
                "virtualization_type": "hvm",
                "vpc_id": "vpc-004ce69b290ad5a5c"
            }
        }
    },
    "all": {
        "children": [
            "ungrouped",
            "aws_ec2",
            "group_requis_backend",
            "instance_group_sentry"
        ]
    },
    "aws_ec2": {
        "hosts": [
            "sentry-0-development"
        ]
    },
    "group_requis_backend": {
        "hosts": [
            "sentry-0-development"
        ]
    },
    "instance_group_sentry": {
        "hosts": [
            "sentry-0-development"
        ]
    }
}
2024-12-26 14:50:57,913 p=6245 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-26 14:50:59,085 p=6245 u=kurthogarth n=ansible | PLAY [Setup Health App] ******************************************************************************************************************************************
2024-12-26 14:50:59,093 p=6245 u=kurthogarth n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2024-12-26 14:51:14,688 p=6245 u=kurthogarth n=ansible | ok: [sentry-0-development]
2024-12-26 14:51:14,696 p=6245 u=kurthogarth n=ansible | TASK [deploy_health_check : Check whoami] ************************************************************************************************************************
2024-12-26 14:51:27,457 p=6245 u=kurthogarth n=ansible | changed: [sentry-0-development]
2024-12-26 14:51:27,468 p=6245 u=kurthogarth n=ansible | TASK [deploy_health_check : Display whoami] **********************************************************************************************************************
2024-12-26 14:51:27,487 p=6245 u=kurthogarth n=ansible | ok: [sentry-0-development] => {
    "msg": "The effective user is root"
}
2024-12-26 14:51:27,493 p=6245 u=kurthogarth n=ansible | TASK [deploy_health_check : Get stats for directory '/srv'] ******************************************************************************************************
2024-12-26 14:51:42,596 p=6245 u=kurthogarth n=ansible | ok: [sentry-0-development]
2024-12-26 14:51:42,606 p=6245 u=kurthogarth n=ansible | TASK [deploy_health_check : Print message if directory exists] ***************************************************************************************************
2024-12-26 14:51:42,628 p=6245 u=kurthogarth n=ansible | ok: [sentry-0-development] => {
    "msg": "Directory '/srv' exists."
}
2024-12-26 14:51:42,633 p=6245 u=kurthogarth n=ansible | TASK [deploy_health_check : Fail if directory not found] *********************************************************************************************************
2024-12-26 14:51:42,646 p=6245 u=kurthogarth n=ansible | skipping: [sentry-0-development]
2024-12-26 14:51:42,650 p=6245 u=kurthogarth n=ansible | TASK [deploy_health_check : Create the app directory] ************************************************************************************************************
2024-12-26 14:51:57,823 p=6245 u=kurthogarth n=ansible | changed: [sentry-0-development]
2024-12-26 14:51:57,832 p=6245 u=kurthogarth n=ansible | TASK [deploy_health_check : Check if the app directory was created] **********************************************************************************************
2024-12-26 14:51:57,905 p=6245 u=kurthogarth n=ansible | ok: [sentry-0-development] => {
    "msg": "Created app directory."
}
2024-12-26 14:51:57,910 p=6245 u=kurthogarth n=ansible | TASK [deploy_health_check : Report failure if the app directory does not exist] **********************************************************************************
2024-12-26 14:51:57,983 p=6245 u=kurthogarth n=ansible | skipping: [sentry-0-development]
2024-12-26 14:51:57,987 p=6245 u=kurthogarth n=ansible | TASK [deploy_health_check : Copy server python script] ***********************************************************************************************************
2024-12-26 14:52:22,996 p=6245 u=kurthogarth n=ansible | changed: [sentry-0-development]
2024-12-26 14:52:23,007 p=6245 u=kurthogarth n=ansible | TASK [deploy_health_check : Check if the copy task was successful] ***********************************************************************************************
2024-12-26 14:52:23,031 p=6245 u=kurthogarth n=ansible | ok: [sentry-0-development] => {
    "msg": "Copied file to: /srv/health_check/http_server.py"
}
2024-12-26 14:52:23,036 p=6245 u=kurthogarth n=ansible | TASK [deploy_health_check : Report failure if copy task failed] **************************************************************************************************
2024-12-26 14:52:23,048 p=6245 u=kurthogarth n=ansible | skipping: [sentry-0-development]
2024-12-26 14:52:23,052 p=6245 u=kurthogarth n=ansible | TASK [Start HTTP Service] ****************************************************************************************************************************************
2024-12-26 14:52:23,069 p=6245 u=kurthogarth n=ansible | included: systemd-service for sentry-0-development
2024-12-26 14:52:23,073 p=6245 u=kurthogarth n=ansible | TASK [systemd-service : Create service file] *********************************************************************************************************************
2024-12-26 14:52:50,747 p=6245 u=kurthogarth n=ansible | changed: [sentry-0-development]
2024-12-26 14:52:50,758 p=6245 u=kurthogarth n=ansible | TASK [systemd-service : Get service file stats] ******************************************************************************************************************
2024-12-26 14:53:05,064 p=6245 u=kurthogarth n=ansible | ok: [sentry-0-development]
2024-12-26 14:53:05,075 p=6245 u=kurthogarth n=ansible | TASK [systemd-service : Check if service file exists] ************************************************************************************************************
2024-12-26 14:53:05,096 p=6245 u=kurthogarth n=ansible | ok: [sentry-0-development] => {
    "msg": "Successfully created service health-check file."
}
2024-12-26 14:53:05,100 p=6245 u=kurthogarth n=ansible | TASK [systemd-service : Fail if the service file does not exist] *************************************************************************************************
2024-12-26 14:53:05,111 p=6245 u=kurthogarth n=ansible | skipping: [sentry-0-development]
2024-12-26 14:53:05,116 p=6245 u=kurthogarth n=ansible | TASK [systemd-service : Reload systemd configuration to recognize the new service] *******************************************************************************
2024-12-26 14:53:18,046 p=6245 u=kurthogarth n=ansible | changed: [sentry-0-development]
2024-12-26 14:53:18,057 p=6245 u=kurthogarth n=ansible | TASK [systemd-service : Start systemd service] *******************************************************************************************************************
2024-12-26 14:53:32,751 p=6245 u=kurthogarth n=ansible | changed: [sentry-0-development]
2024-12-26 14:53:32,760 p=6245 u=kurthogarth n=ansible | TASK [systemd-service : Get the status of the service] ***********************************************************************************************************
2024-12-26 14:53:47,366 p=6245 u=kurthogarth n=ansible | ok: [sentry-0-development]
2024-12-26 14:53:47,375 p=6245 u=kurthogarth n=ansible | TASK [systemd-service : Print message if service is running] *****************************************************************************************************
2024-12-26 14:53:47,396 p=6245 u=kurthogarth n=ansible | ok: [sentry-0-development] => {
    "msg": "Started service health-check."
}
2024-12-26 14:53:47,400 p=6245 u=kurthogarth n=ansible | TASK [systemd-service : Fail if the service is not running] ******************************************************************************************************
2024-12-26 14:53:47,411 p=6245 u=kurthogarth n=ansible | skipping: [sentry-0-development]
2024-12-26 14:53:47,421 p=6245 u=kurthogarth n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2024-12-26 14:53:47,421 p=6245 u=kurthogarth n=ansible | sentry-0-development       : ok=17   changed=6    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2024-12-26 17:55:56,630 p=21691 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-26 17:55:57,539 p=21691 u=kurthogarth n=ansible | {
    "_meta": {
        "hostvars": {
            "sentry-0-development": {
                "ami_launch_index": 0,
                "ansible_host": "54.241.82.176",
                "architecture": "x86_64",
                "aws_credentials": {
                    "AWS_ACCESS_KEY_ID": "<AWS_ACCESS_KEY_ID>",
                    "AWS_SECRET_ACCESS_KEY": "<AWS_SECRET_ACCESS_KEY>"
                },
                "block_device_mappings": [
                    {
                        "device_name": "/dev/xvda",
                        "ebs": {
                            "attach_time": "2024-12-26T22:55:00+00:00",
                            "delete_on_termination": true,
                            "status": "attached",
                            "volume_id": "vol-0e84e20f231d8c74f"
                        }
                    },
                    {
                        "device_name": "/dev/sdh",
                        "ebs": {
                            "attach_time": "2024-12-26T22:55:23+00:00",
                            "delete_on_termination": false,
                            "status": "attached",
                            "volume_id": "vol-0a14aaa83e83486e4"
                        }
                    }
                ],
                "boot_mode": "uefi-preferred",
                "capacity_reservation_specification": {
                    "capacity_reservation_preference": "open"
                },
                "client_token": "terraform-20241226225458598400000001",
                "cpu_options": {
                    "core_count": 1,
                    "threads_per_core": 2
                },
                "current_instance_boot_mode": "uefi",
                "ebs_optimized": false,
                "ena_support": true,
                "enclave_options": {
                    "enabled": false
                },
                "hibernation_options": {
                    "configured": false
                },
                "hypervisor": "xen",
                "iam_instance_profile": {
                    "arn": "arn:aws:iam::750872578221:instance-profile/sentry-0-development-profile",
                    "id": "AIPA25U36JCW5VKNYAW5R"
                },
                "image_id": "ami-047d7c33f6e7b4bc4",
                "instance_id": "i-055c086e526eb3993",
                "instance_type": "t3.micro",
                "key_name": "kurt-deploy-key",
                "launch_time": "2024-12-26T22:54:59+00:00",
                "maintenance_options": {
                    "auto_recovery": "default"
                },
                "metadata_options": {
                    "http_endpoint": "enabled",
                    "http_protocol_ipv6": "disabled",
                    "http_put_response_hop_limit": 2,
                    "http_tokens": "required",
                    "instance_metadata_tags": "disabled",
                    "state": "applied"
                },
                "monitoring": {
                    "state": "disabled"
                },
                "network_interfaces": [
                    {
                        "association": {
                            "ip_owner_id": "amazon",
                            "public_dns_name": "ec2-54-241-82-176.us-west-1.compute.amazonaws.com",
                            "public_ip": "54.241.82.176"
                        },
                        "attachment": {
                            "attach_time": "2024-12-26T22:54:59+00:00",
                            "attachment_id": "eni-attach-0f56884500021a9f9",
                            "delete_on_termination": true,
                            "device_index": 0,
                            "network_card_index": 0,
                            "status": "attached"
                        },
                        "description": "",
                        "groups": [
                            {
                                "group_id": "sg-077dccb222bd4df95",
                                "group_name": "requis_backend_allow_ssh"
                            },
                            {
                                "group_id": "sg-0cef7ae2e69daa77a",
                                "group_name": "requis_backend_allow_tls"
                            }
                        ],
                        "interface_type": "interface",
                        "ipv6_addresses": [],
                        "mac_address": "06:3d:ec:db:b2:a1",
                        "network_interface_id": "eni-0f8cd59421f0117fd",
                        "owner_id": "750872578221",
                        "private_dns_name": "i-055c086e526eb3993.us-west-1.compute.internal",
                        "private_ip_address": "10.16.64.46",
                        "private_ip_addresses": [
                            {
                                "association": {
                                    "ip_owner_id": "amazon",
                                    "public_dns_name": "ec2-54-241-82-176.us-west-1.compute.amazonaws.com",
                                    "public_ip": "54.241.82.176"
                                },
                                "primary": true,
                                "private_dns_name": "i-055c086e526eb3993.us-west-1.compute.internal",
                                "private_ip_address": "10.16.64.46"
                            }
                        ],
                        "source_dest_check": true,
                        "status": "in-use",
                        "subnet_id": "subnet-0ef614d4e231e27e0",
                        "vpc_id": "vpc-07fc47cbc38b74074"
                    }
                ],
                "owner_id": "750872578221",
                "placement": {
                    "availability_zone": "us-west-1a",
                    "group_name": "",
                    "region": "us-west-1",
                    "tenancy": "default"
                },
                "platform_details": "Linux/UNIX",
                "private_dns_name": "i-055c086e526eb3993.us-west-1.compute.internal",
                "private_dns_name_options": {
                    "enable_resource_name_dns_a_record": true,
                    "enable_resource_name_dns_aaaa_record": false,
                    "hostname_type": "resource-name"
                },
                "private_ip_address": "10.16.64.46",
                "product_codes": [],
                "public_dns_name": "ec2-54-241-82-176.us-west-1.compute.amazonaws.com",
                "public_ip_address": "54.241.82.176",
                "requester_id": "",
                "reservation_id": "r-064b7648434e10143",
                "root_device_name": "/dev/xvda",
                "root_device_type": "ebs",
                "security_groups": [
                    {
                        "group_id": "sg-077dccb222bd4df95",
                        "group_name": "requis_backend_allow_ssh"
                    },
                    {
                        "group_id": "sg-0cef7ae2e69daa77a",
                        "group_name": "requis_backend_allow_tls"
                    }
                ],
                "source_dest_check": true,
                "state": {
                    "code": 16,
                    "name": "running"
                },
                "state_transition_reason": "",
                "subnet_id": "subnet-0ef614d4e231e27e0",
                "tags": {
                    "AvailabilityZone": "us-west-1a",
                    "Environment": "development",
                    "InstanceGroup": "sentry",
                    "InventoryGroup": "requis_backend",
                    "Name": "sentry-0-development",
                    "Region": "us-west-1",
                    "Repository": "https://github.com/RequisDev/requis_backend_umbrella/",
                    "Terraform": "true",
                    "Type": "Self Made",
                    "Vendor": "Self"
                },
                "usage_operation": "RunInstances",
                "usage_operation_update_time": "2024-12-26T22:54:59+00:00",
                "virtualization_type": "hvm",
                "vpc_id": "vpc-07fc47cbc38b74074"
            }
        }
    },
    "all": {
        "children": [
            "ungrouped",
            "aws_ec2",
            "group_requis_backend",
            "instance_group_sentry"
        ]
    },
    "aws_ec2": {
        "hosts": [
            "sentry-0-development"
        ]
    },
    "group_requis_backend": {
        "hosts": [
            "sentry-0-development"
        ]
    },
    "instance_group_sentry": {
        "hosts": [
            "sentry-0-development"
        ]
    }
}
2024-12-26 18:06:24,957 p=22270 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-26 18:06:26,043 p=22270 u=kurthogarth n=ansible | {
    "_meta": {
        "hostvars": {
            "sentry-0-development": {
                "ami_launch_index": 0,
                "ansible_host": "54.241.82.176",
                "architecture": "x86_64",
                "aws_credentials": {
                    "AWS_ACCESS_KEY_ID": "<AWS_ACCESS_KEY_ID>",
                    "AWS_SECRET_ACCESS_KEY": "<AWS_SECRET_ACCESS_KEY>"
                },
                "block_device_mappings": [
                    {
                        "device_name": "/dev/xvda",
                        "ebs": {
                            "attach_time": "2024-12-26T22:55:00+00:00",
                            "delete_on_termination": true,
                            "status": "attached",
                            "volume_id": "vol-0e84e20f231d8c74f"
                        }
                    },
                    {
                        "device_name": "/dev/sdh",
                        "ebs": {
                            "attach_time": "2024-12-26T22:55:23+00:00",
                            "delete_on_termination": false,
                            "status": "attached",
                            "volume_id": "vol-0a14aaa83e83486e4"
                        }
                    }
                ],
                "boot_mode": "uefi-preferred",
                "capacity_reservation_specification": {
                    "capacity_reservation_preference": "open"
                },
                "client_token": "terraform-20241226225458598400000001",
                "cpu_options": {
                    "core_count": 1,
                    "threads_per_core": 2
                },
                "current_instance_boot_mode": "uefi",
                "ebs_optimized": false,
                "ena_support": true,
                "enclave_options": {
                    "enabled": false
                },
                "hibernation_options": {
                    "configured": false
                },
                "hypervisor": "xen",
                "iam_instance_profile": {
                    "arn": "arn:aws:iam::750872578221:instance-profile/sentry-0-development-profile",
                    "id": "AIPA25U36JCW5VKNYAW5R"
                },
                "image_id": "ami-047d7c33f6e7b4bc4",
                "instance_id": "i-055c086e526eb3993",
                "instance_type": "t3.micro",
                "key_name": "kurt-deploy-key",
                "launch_time": "2024-12-26T22:54:59+00:00",
                "maintenance_options": {
                    "auto_recovery": "default"
                },
                "metadata_options": {
                    "http_endpoint": "enabled",
                    "http_protocol_ipv6": "disabled",
                    "http_put_response_hop_limit": 2,
                    "http_tokens": "required",
                    "instance_metadata_tags": "disabled",
                    "state": "applied"
                },
                "monitoring": {
                    "state": "disabled"
                },
                "network_interfaces": [
                    {
                        "association": {
                            "ip_owner_id": "amazon",
                            "public_dns_name": "ec2-54-241-82-176.us-west-1.compute.amazonaws.com",
                            "public_ip": "54.241.82.176"
                        },
                        "attachment": {
                            "attach_time": "2024-12-26T22:54:59+00:00",
                            "attachment_id": "eni-attach-0f56884500021a9f9",
                            "delete_on_termination": true,
                            "device_index": 0,
                            "network_card_index": 0,
                            "status": "attached"
                        },
                        "description": "",
                        "groups": [
                            {
                                "group_id": "sg-077dccb222bd4df95",
                                "group_name": "requis_backend_allow_ssh"
                            },
                            {
                                "group_id": "sg-0cef7ae2e69daa77a",
                                "group_name": "requis_backend_allow_tls"
                            }
                        ],
                        "interface_type": "interface",
                        "ipv6_addresses": [],
                        "mac_address": "06:3d:ec:db:b2:a1",
                        "network_interface_id": "eni-0f8cd59421f0117fd",
                        "owner_id": "750872578221",
                        "private_dns_name": "i-055c086e526eb3993.us-west-1.compute.internal",
                        "private_ip_address": "10.16.64.46",
                        "private_ip_addresses": [
                            {
                                "association": {
                                    "ip_owner_id": "amazon",
                                    "public_dns_name": "ec2-54-241-82-176.us-west-1.compute.amazonaws.com",
                                    "public_ip": "54.241.82.176"
                                },
                                "primary": true,
                                "private_dns_name": "i-055c086e526eb3993.us-west-1.compute.internal",
                                "private_ip_address": "10.16.64.46"
                            }
                        ],
                        "source_dest_check": true,
                        "status": "in-use",
                        "subnet_id": "subnet-0ef614d4e231e27e0",
                        "vpc_id": "vpc-07fc47cbc38b74074"
                    }
                ],
                "owner_id": "750872578221",
                "placement": {
                    "availability_zone": "us-west-1a",
                    "group_name": "",
                    "region": "us-west-1",
                    "tenancy": "default"
                },
                "platform_details": "Linux/UNIX",
                "private_dns_name": "i-055c086e526eb3993.us-west-1.compute.internal",
                "private_dns_name_options": {
                    "enable_resource_name_dns_a_record": true,
                    "enable_resource_name_dns_aaaa_record": false,
                    "hostname_type": "resource-name"
                },
                "private_ip_address": "10.16.64.46",
                "product_codes": [],
                "public_dns_name": "ec2-54-241-82-176.us-west-1.compute.amazonaws.com",
                "public_ip_address": "54.241.82.176",
                "requester_id": "",
                "reservation_id": "r-064b7648434e10143",
                "root_device_name": "/dev/xvda",
                "root_device_type": "ebs",
                "security_groups": [
                    {
                        "group_id": "sg-077dccb222bd4df95",
                        "group_name": "requis_backend_allow_ssh"
                    },
                    {
                        "group_id": "sg-0cef7ae2e69daa77a",
                        "group_name": "requis_backend_allow_tls"
                    }
                ],
                "source_dest_check": true,
                "state": {
                    "code": 16,
                    "name": "running"
                },
                "state_transition_reason": "",
                "subnet_id": "subnet-0ef614d4e231e27e0",
                "tags": {
                    "AvailabilityZone": "us-west-1a",
                    "Environment": "development",
                    "InstanceGroup": "sentry",
                    "InventoryGroup": "requis_backend",
                    "Name": "sentry-0-development",
                    "Region": "us-west-1",
                    "Repository": "https://github.com/RequisDev/requis_backend_umbrella/",
                    "Terraform": "true",
                    "Type": "Self Made",
                    "Vendor": "Self"
                },
                "usage_operation": "RunInstances",
                "usage_operation_update_time": "2024-12-26T22:54:59+00:00",
                "virtualization_type": "hvm",
                "vpc_id": "vpc-07fc47cbc38b74074"
            }
        }
    },
    "all": {
        "children": [
            "ungrouped",
            "aws_ec2",
            "group_requis_backend",
            "instance_group_sentry"
        ]
    },
    "aws_ec2": {
        "hosts": [
            "sentry-0-development"
        ]
    },
    "group_requis_backend": {
        "hosts": [
            "sentry-0-development"
        ]
    },
    "instance_group_sentry": {
        "hosts": [
            "sentry-0-development"
        ]
    }
}
2024-12-26 18:06:36,600 p=22295 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-26 18:06:37,630 p=22295 u=kurthogarth n=ansible | PLAY [Setup Health App] **************************************************************************************************************************************
2024-12-26 18:06:37,636 p=22295 u=kurthogarth n=ansible | TASK [Gathering Facts] ***************************************************************************************************************************************
2024-12-26 18:06:37,646 p=22295 u=kurthogarth n=ansible | fatal: [sentry-0-development]: FAILED! => {"msg": "the connection plugin 'heck' was not found"}
2024-12-26 18:06:37,647 p=22295 u=kurthogarth n=ansible | PLAY RECAP ***************************************************************************************************************************************************
2024-12-26 18:06:37,647 p=22295 u=kurthogarth n=ansible | sentry-0-development       : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2024-12-26 18:06:39,428 p=22307 u=kurthogarth n=botocore.credentials | Found credentials in shared credentials file: ~/.aws/credentials
2024-12-26 18:06:40,185 p=22307 u=kurthogarth n=ansible | PLAY [Setup Health App] **************************************************************************************************************************************
2024-12-26 18:06:40,190 p=22307 u=kurthogarth n=ansible | TASK [Gathering Facts] ***************************************************************************************************************************************
2024-12-26 18:06:40,200 p=22307 u=kurthogarth n=ansible | fatal: [sentry-0-development]: FAILED! => {"msg": "the connection plugin 'heck' was not found"}
2024-12-26 18:06:40,200 p=22307 u=kurthogarth n=ansible | PLAY RECAP ***************************************************************************************************************************************************
2024-12-26 18:06:40,200 p=22307 u=kurthogarth n=ansible | sentry-0-development       : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
